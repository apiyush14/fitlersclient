{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\screens\\\\RunHistoryScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { scale, moderateScale, verticalScale } from \"../utils/Utils\";\nimport StatusCodes from \"../utils/StatusCodes.json\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport RunHistoryList from \"../components/RunHistoryList\";\nimport DashboardItem from \"../components/DashboardItem\";\nimport RunDetails from \"../models/rundetails\";\nimport * as runActions from \"../store/run-actions\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar RunHistoryScreen = function RunHistoryScreen(props) {\n  var isFocused = useIsFocused();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMoreContentAvailableOnServer = _useState4[0],\n      setIsMoreContentAvailable = _useState4[1];\n\n  var runsHistory = useSelector(function (state) {\n    return state.runs.runs;\n  });\n  var runSummary = useSelector(function (state) {\n    return state.runs.runSummary;\n  });\n  var pendingRunsForSync = useSelector(function (state) {\n    return state.runs.runs.filter(function (run) {\n      return run.isSyncDone === \"0\";\n    });\n  });\n  useEffect(function () {\n    setIsMoreContentAvailable(true);\n\n    if (isFocused && pendingRunsForSync !== null && pendingRunsForSync.length > 0) {\n      dispatch(runActions.syncPendingRuns(pendingRunsForSync));\n    }\n  }, [props, isFocused]);\n\n  var loadMoreDataFromServer = function loadMoreDataFromServer() {\n    if (isMoreContentAvailableOnServer) {\n      setIsLoading(true);\n      var pageNumber = Math.floor(runsHistory.length / 3);\n      dispatch(runActions.loadRunsFromServer(pageNumber)).then(function (response) {\n        if (response.status >= StatusCodes.BAD_REQUEST) {\n          setIsMoreContentAvailable(false);\n        } else if (response.data && !response.data.moreContentAvailable) {\n          setIsMoreContentAvailable(false);\n        } else {\n          setIsMoreContentAvailable(true);\n        }\n\n        setIsLoading(false);\n      });\n    }\n  };\n\n  var onSelectRunHistoryItem = function onSelectRunHistoryItem(itemdata) {\n    var runDetails = new RunDetails(itemdata.item.runId, itemdata.item.runTotalTime, itemdata.item.runDistance, itemdata.item.runPace, itemdata.item.runCaloriesBurnt, 0, itemdata.item.runStartDateTime, itemdata.item.runDate, itemdata.item.runDay, itemdata.item.runPath, itemdata.item.runTrackSnapUrl, 0, \"0\");\n    props.navigation.navigate('RunDetailsScreen', {\n      sourceScreen: 'RunHistoryScreen',\n      runDetails: runDetails\n    });\n  };\n\n  var renderRunSummaryFooter = function renderRunSummaryFooter() {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, isLoading ? React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }));\n  };\n\n  var renderRunSummaryHeader = function renderRunSummaryHeader() {\n    return React.createElement(View, {\n      style: styles.runsHistoryDashboardContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, React.createElement(DashboardItem, {\n      text: runSummary != null ? parseFloat(runSummary.totalDistance / 1000).toFixed(2) + \" KM\" : 0 + \" KM\",\n      footerText: \"Total Distance\",\n      style: styles.totalDistanceDashboardItemStyle,\n      icon: \"ios-walk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }), React.createElement(DashboardItem, {\n      text: runSummary != null ? parseFloat(runSummary.averageDistance / 1000).toFixed(2) + \" KM\" : 0 + \" KM\",\n      footerText: \"Avg Distance\",\n      style: styles.averageDistanceDashboardItemStyle,\n      icon: \"ios-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 6\n      }\n    }), React.createElement(DashboardItem, {\n      text: runSummary != null ? parseFloat(runSummary.averagePace).toFixed(2) : 0.00,\n      footerText: \"Avg Pace\",\n      style: styles.averagePaceDashboardItemStyle,\n      icon: \"ios-stopwatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }), React.createElement(View, {\n      style: styles.footerContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.footerViewContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: styles.footerValueContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, React.createElement(Ionicons, {\n      name: Platform.OS === 'android' ? \"md-ribbon\" : \"ios-ribbon\",\n      size: 30,\n      color: \"springgreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }), React.createElement(Text, {\n      style: styles.footerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }\n    }, runSummary != null ? parseInt(runSummary.totalRuns) : 0)), React.createElement(Text, {\n      style: styles.footerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, \"Total Runs\")), React.createElement(View, {\n      style: styles.divisorStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }), React.createElement(View, {\n      style: styles.footerViewContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: styles.footerValueContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, React.createElement(Ionicons, {\n      name: Platform.OS === 'android' ? \"md-flame\" : \"ios-flame\",\n      size: 30,\n      color: \"springgreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }\n    }), React.createElement(Text, {\n      style: styles.footerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 8\n      }\n    }, runSummary != null ? parseFloat(runSummary.averageCaloriesBurnt).toFixed(2) : 0)), React.createElement(Text, {\n      style: styles.footerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, \"Calories\"))));\n  };\n\n  return React.createElement(View, {\n    style: styles.runHistoryContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, React.createElement(RunHistoryList, {\n    onSelectRunItem: onSelectRunHistoryItem,\n    onEndReached: loadMoreDataFromServer,\n    isLoading: isLoading,\n    header: renderRunSummaryHeader(),\n    footer: renderRunSummaryFooter(),\n    listData: runsHistory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  runHistoryContainerStyle: {\n    flex: 1,\n    backgroundColor: 'white',\n    flexDirection: 'column'\n  },\n  runsHistoryDashboardContainerStyle: {\n    width: width,\n    paddingVertical: '20%',\n    backgroundColor: 'black',\n    borderRadius: 25\n  },\n  averagePaceDashboardItemStyle: {\n    position: 'absolute',\n    left: '2%',\n    top: '10%',\n    alignSelf: 'flex-start'\n  },\n  totalDistanceDashboardItemStyle: {\n    alignSelf: 'center',\n    top: '30%'\n  },\n  averageDistanceDashboardItemStyle: {\n    position: 'absolute',\n    right: '2%',\n    top: '10%',\n    alignSelf: 'flex-end'\n  },\n  footerContainerStyle: {\n    flex: 1,\n    top: '20%',\n    height: verticalScale(70),\n    borderColor: 'springgreen',\n    borderWidth: 1,\n    borderRadius: 25,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  footerViewContainerStyle: {\n    flex: 0.5,\n    alignItems: 'center'\n  },\n  footerValueContainerStyle: {\n    flexDirection: 'row'\n  },\n  divisorStyle: {\n    borderWidth: 0.5,\n    borderColor: 'springgreen',\n    height: '100%'\n  },\n  footerTextStyle: {\n    paddingHorizontal: '3%',\n    color: 'springgreen',\n    fontSize: moderateScale(18, 0.8),\n    alignSelf: 'center'\n  }\n});\nexport default RunHistoryScreen;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/screens/RunHistoryScreen.js"],"names":["React","useState","useEffect","scale","moderateScale","verticalScale","StatusCodes","useIsFocused","useSelector","useDispatch","Ionicons","RunHistoryList","DashboardItem","RunDetails","runActions","Dimensions","get","width","height","RunHistoryScreen","props","isFocused","dispatch","isLoading","setIsLoading","isMoreContentAvailableOnServer","setIsMoreContentAvailable","runsHistory","state","runs","runSummary","pendingRunsForSync","filter","run","isSyncDone","length","syncPendingRuns","loadMoreDataFromServer","pageNumber","Math","floor","loadRunsFromServer","then","response","status","BAD_REQUEST","data","moreContentAvailable","onSelectRunHistoryItem","itemdata","runDetails","item","runId","runTotalTime","runDistance","runPace","runCaloriesBurnt","runStartDateTime","runDate","runDay","runPath","runTrackSnapUrl","navigation","navigate","sourceScreen","renderRunSummaryFooter","renderRunSummaryHeader","styles","runsHistoryDashboardContainerStyle","parseFloat","totalDistance","toFixed","totalDistanceDashboardItemStyle","averageDistance","averageDistanceDashboardItemStyle","averagePace","averagePaceDashboardItemStyle","footerContainerStyle","footerViewContainerStyle","footerValueContainerStyle","Platform","OS","footerTextStyle","parseInt","totalRuns","divisorStyle","averageCaloriesBurnt","runHistoryContainerStyle","StyleSheet","create","flex","backgroundColor","flexDirection","paddingVertical","borderRadius","position","left","top","alignSelf","right","borderColor","borderWidth","alignItems","paddingHorizontal","color","fontSize"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {View,Text,StyleSheet,ActivityIndicator,Platform} from 'react-native';\r\nimport { scale, moderateScale, verticalScale} from '../utils/Utils';\r\nimport StatusCodes from \"../utils/StatusCodes.json\";\r\nimport {useIsFocused} from \"@react-navigation/native\";\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport RunHistoryList from '../components/RunHistoryList';\r\nimport DashboardItem from '../components/DashboardItem';\r\nimport RunDetails from '../models/rundetails';\r\nimport * as runActions from '../store/run-actions';\r\nimport { Dimensions } from 'react-native';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst RunHistoryScreen = props => {\r\n\r\n    //State Variables\r\n    const isFocused = useIsFocused();\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isMoreContentAvailableOnServer, setIsMoreContentAvailable] = useState(true);\r\n\r\n    // State Selectors\r\n    const runsHistory = useSelector(state => state.runs.runs);\r\n    const runSummary = useSelector(state => state.runs.runSummary);\r\n    const pendingRunsForSync = useSelector(state => state.runs.runs.filter(run => run.isSyncDone === \"0\"));\r\n\r\n  // Use Effect Hook to be loaded everytime the screen loads\r\n  useEffect(() => {\r\n    setIsMoreContentAvailable(true);\r\n    if (isFocused && pendingRunsForSync !== null && pendingRunsForSync.length > 0) {\r\n      dispatch(runActions.syncPendingRuns(pendingRunsForSync));\r\n    }\r\n  }, [props, isFocused]);\r\n\r\n  //Async Method to lazy load Runs from server \r\n  const loadMoreDataFromServer = () => {\r\n    if (isMoreContentAvailableOnServer) {\r\n      setIsLoading(true);\r\n      let pageNumber = Math.floor(runsHistory.length / 3);\r\n      dispatch(runActions.loadRunsFromServer(pageNumber)).then((response) => {\r\n        if (response.status >= StatusCodes.BAD_REQUEST) {\r\n          setIsMoreContentAvailable(false);\r\n        } else if (response.data&&(!response.data.moreContentAvailable)) {\r\n          setIsMoreContentAvailable(false);\r\n        } else {\r\n          setIsMoreContentAvailable(true);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  //Event Listener to be called on selecting Run and to navigate to Run History Screen\r\n  const onSelectRunHistoryItem = (itemdata) => {\r\n    var runDetails = new RunDetails(itemdata.item.runId, itemdata.item.runTotalTime, itemdata.item.runDistance, itemdata.item.runPace, itemdata.item.runCaloriesBurnt, 0, itemdata.item.runStartDateTime, itemdata.item.runDate, itemdata.item.runDay, itemdata.item.runPath, itemdata.item.runTrackSnapUrl, 0, \"0\");\r\n    props.navigation.navigate('RunDetailsScreen', {\r\n      sourceScreen: 'RunHistoryScreen',\r\n      runDetails: runDetails\r\n    });\r\n  };\r\n\r\n  // Run History Footer View\r\n  const renderRunSummaryFooter = () => {\r\n    return (\r\n      <View>\r\n      {isLoading?\r\n       (\r\n        <ActivityIndicator size=\"large\" color=\"green\"/>\r\n       ):\r\n       (\r\n       <View></View>\r\n       )\r\n      }\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // Run Summary Header View\r\n  const renderRunSummaryHeader = () => {\r\n    return ( \r\n    <View style={styles.runsHistoryDashboardContainerStyle}>\r\n\r\n     <DashboardItem\r\n      text={runSummary!=null?parseFloat(runSummary.totalDistance/1000).toFixed(2)+\" KM\":0+\" KM\"}\r\n      footerText=\"Total Distance\"\r\n      style={styles.totalDistanceDashboardItemStyle} \r\n      icon=\"ios-walk\"/>\r\n\r\n     <DashboardItem \r\n      text={runSummary!=null?parseFloat(runSummary.averageDistance/1000).toFixed(2)+\" KM\":0+\" KM\"}\r\n      footerText=\"Avg Distance\"\r\n      style={styles.averageDistanceDashboardItemStyle} \r\n      icon=\"ios-stats\"/>\r\n\r\n     <DashboardItem \r\n      text={runSummary!=null?parseFloat(runSummary.averagePace).toFixed(2):0.00}\r\n      footerText=\"Avg Pace\"\r\n      style={styles.averagePaceDashboardItemStyle} \r\n      icon=\"ios-stopwatch\"/>\r\n\r\n    <View style={styles.footerContainerStyle}>\r\n     <View style={styles.footerViewContainerStyle}>\r\n      <View style={styles.footerValueContainerStyle}> \r\n       <Ionicons name={Platform.OS === 'android'?\"md-ribbon\":\"ios-ribbon\"} size={30} color='springgreen'/>\r\n       <Text style={styles.footerTextStyle}>{runSummary!=null?parseInt(runSummary.totalRuns):0}</Text>\r\n      </View>\r\n      <Text style={styles.footerTextStyle}>Total Runs</Text>\r\n     </View>\r\n\r\n     <View style={styles.divisorStyle}>\r\n     </View>\r\n\r\n     <View style={styles.footerViewContainerStyle}>\r\n      <View style={styles.footerValueContainerStyle}>\r\n       <Ionicons name={Platform.OS === 'android'?\"md-flame\":\"ios-flame\"} size={30} color='springgreen'/>\r\n       <Text style={styles.footerTextStyle}>\r\n        {runSummary!=null?parseFloat(runSummary.averageCaloriesBurnt).toFixed(2):0}\r\n       </Text> \r\n      </View>\r\n      <Text style={styles.footerTextStyle}>Calories</Text>\r\n     </View>\r\n\r\n    </View>\r\n    </View>\r\n    );\r\n  };\r\n\r\n//View\r\n  return ( \r\n  <View style={styles.runHistoryContainerStyle}>\r\n    <RunHistoryList\r\n     onSelectRunItem={onSelectRunHistoryItem}\r\n     onEndReached={loadMoreDataFromServer}\r\n     isLoading={isLoading}\r\n     header={renderRunSummaryHeader()}\r\n     footer={renderRunSummaryFooter()}\r\n     listData={runsHistory}/>\r\n   </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  runHistoryContainerStyle: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  runsHistoryDashboardContainerStyle: {\r\n    width: width,\r\n    paddingVertical: '20%',\r\n    backgroundColor: 'black',\r\n    borderRadius: 25\r\n  },\r\n\r\n  averagePaceDashboardItemStyle: {\r\n    position: 'absolute',\r\n    left: '2%',\r\n    top: '10%',\r\n    alignSelf: 'flex-start'\r\n  },\r\n  totalDistanceDashboardItemStyle: {\r\n    alignSelf: 'center',\r\n    top: '30%'\r\n  },\r\n  averageDistanceDashboardItemStyle: {\r\n    position: 'absolute',\r\n    right: '2%',\r\n    top: '10%',\r\n    alignSelf: 'flex-end'\r\n  },\r\n\r\n  footerContainerStyle: {\r\n    flex: 1,\r\n    top: '20%',\r\n    height: verticalScale(70),\r\n    borderColor: 'springgreen',\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  footerViewContainerStyle: {\r\n    flex: 0.5,\r\n    alignItems: 'center'\r\n  },\r\n  footerValueContainerStyle: {\r\n    flexDirection: 'row'\r\n  },\r\n  divisorStyle: {\r\n    borderWidth: 0.5,\r\n    borderColor: 'springgreen',\r\n    height: '100%'\r\n  },\r\n  footerTextStyle: {\r\n    paddingHorizontal: '3%',\r\n    color: 'springgreen',\r\n    fontSize: moderateScale(18, 0.8),\r\n    alignSelf: 'center'\r\n  }\r\n\r\n});\r\n\r\nexport default RunHistoryScreen;"]},"metadata":{},"sourceType":"module"}