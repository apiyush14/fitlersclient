{"ast":null,"code":"import { UPDATE_EVENTS_FROM_SERVER, UPDATE_EVENT_REGISTRATION_DETAILS, UPDATE_RUN_IN_EVENT_REGISTRATION, UPDATE_EVENT_RESULT_DETAILS, CLEAN_EVENT_STATE } from \"./event-actions\";\nimport EventDetails from \"../models/eventdetails\";\nimport EventRegistrationDetails from \"../models/eventRegistrationDetails\";\nimport EventResultDetails from \"../models/eventResultDetails\";\nvar initialState = {\n  eventDetails: [],\n  eventRegistrationDetails: [],\n  eventResultDetails: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_EVENTS_FROM_SERVER:\n      var updatedEventsFromServer = action.eventDetails.map(function (event) {\n        if (state.eventDetails.findIndex(function (eventState) {\n          return eventState.eventId === event.eventId;\n        }) < 0) {\n          return new EventDetails(event.eventId, event.eventOrganizerFirstName, event.eventOrganizerLastName, event.eventOrganizerContactNumber, event.eventName, event.eventDescription, event.eventStartDate, event.eventEndDate, event.eventDisplayPic, event.eventMetricType, event.eventMetricValue);\n        }\n      }).filter(function (updatedEvent) {\n        return updatedEvent !== undefined;\n      });\n      state.eventDetails = state.eventDetails.concat(updatedEventsFromServer);\n      return state;\n\n    case UPDATE_EVENT_REGISTRATION_DETAILS:\n      var updatedEventRegistrationDetails = action.eventRegistrationDetails.map(function (event) {\n        if (state.eventRegistrationDetails.findIndex(function (eventState) {\n          return eventState.eventId === event.eventId;\n        }) < 0) {\n          return new EventRegistrationDetails(event.eventId, event.eventOrganizerFirstName, event.eventOrganizerLastName, event.eventOrganizerContactNumber, event.eventName, event.eventDescription, event.eventStartDate, event.eventEndDate, event.eventDisplayPic, event.eventMetricType, event.eventMetricValue, parseInt(event.runId));\n        }\n      }).filter(function (updatedEvent) {\n        return updatedEvent !== undefined;\n      });\n      state.eventRegistrationDetails = state.eventRegistrationDetails.concat(updatedEventRegistrationDetails);\n      return state;\n\n    case UPDATE_RUN_IN_EVENT_REGISTRATION:\n      var updatedEventRegistration = action.updatedEventRegistrationDetails;\n      var eventRegistrationDetailsIndex = state.eventRegistrationDetails.findIndex(function (eventDetails) {\n        return eventDetails.eventId === updatedEventRegistration.eventId;\n      });\n      state.eventRegistrationDetails[eventRegistrationDetailsIndex].runId = updatedEventRegistration.runId;\n      return state;\n\n    case UPDATE_EVENT_RESULT_DETAILS:\n      var updatedEventResultDetails = action.eventResultDetails.map(function (eventResult) {\n        if (state.eventResultDetails.findIndex(function (eventResultState) {\n          return eventResultState.runId === eventResult.runId;\n        }) < 0) {\n          return new EventResultDetails(eventResult.eventId, eventResult.runId, eventResult.userRank);\n        }\n      }).filter(function (updatedEventResult) {\n        return updatedEventResult !== undefined;\n      });\n      state.eventResultDetails = state.eventResultDetails.concat(updatedEventResultDetails);\n      return state;\n\n    case CLEAN_EVENT_STATE:\n      state.eventDetails = [];\n      state.eventRegistrationDetails = [];\n      state.eventResultDetails = [];\n      return state;\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/store/event-reducer.js"],"names":["UPDATE_EVENTS_FROM_SERVER","UPDATE_EVENT_REGISTRATION_DETAILS","UPDATE_RUN_IN_EVENT_REGISTRATION","UPDATE_EVENT_RESULT_DETAILS","CLEAN_EVENT_STATE","EventDetails","EventRegistrationDetails","EventResultDetails","initialState","eventDetails","eventRegistrationDetails","eventResultDetails","state","action","type","updatedEventsFromServer","map","event","findIndex","eventState","eventId","eventOrganizerFirstName","eventOrganizerLastName","eventOrganizerContactNumber","eventName","eventDescription","eventStartDate","eventEndDate","eventDisplayPic","eventMetricType","eventMetricValue","filter","updatedEvent","undefined","concat","updatedEventRegistrationDetails","parseInt","runId","updatedEventRegistration","eventRegistrationDetailsIndex","updatedEventResultDetails","eventResult","eventResultState","userRank","updatedEventResult"],"mappings":"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","sourcesContent":["import {UPDATE_EVENTS_FROM_SERVER,UPDATE_EVENT_REGISTRATION_DETAILS,UPDATE_RUN_IN_EVENT_REGISTRATION,UPDATE_EVENT_RESULT_DETAILS,CLEAN_EVENT_STATE} from './event-actions';\r\nimport EventDetails from '../models/eventdetails';\r\nimport EventRegistrationDetails from '../models/eventRegistrationDetails';\r\nimport EventResultDetails from '../models/eventResultDetails';\r\n\r\nconst initialState={\r\n\teventDetails:[],\r\n    eventRegistrationDetails:[],\r\n    eventResultDetails:[]\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_EVENTS_FROM_SERVER:\r\n            var updatedEventsFromServer = action.eventDetails.map((event) => {\r\n                if (state.eventDetails.findIndex(eventState => eventState.eventId === event.eventId) < 0) {\r\n                    return new EventDetails(event.eventId, event.eventOrganizerFirstName, event.eventOrganizerLastName, event.eventOrganizerContactNumber, event.eventName, event.eventDescription, event.eventStartDate, event.eventEndDate, event.eventDisplayPic, event.eventMetricType, event.eventMetricValue);\r\n                }\r\n            }).filter(updatedEvent => updatedEvent !== undefined);\r\n            state.eventDetails = state.eventDetails.concat(updatedEventsFromServer);\r\n            return state;\r\n\r\n        case UPDATE_EVENT_REGISTRATION_DETAILS:\r\n            var updatedEventRegistrationDetails = action.eventRegistrationDetails.map((event) => {\r\n                if (state.eventRegistrationDetails.findIndex(eventState => eventState.eventId === event.eventId) < 0) {\r\n                    return new EventRegistrationDetails(event.eventId, event.eventOrganizerFirstName, event.eventOrganizerLastName, event.eventOrganizerContactNumber, event.eventName, event.eventDescription, event.eventStartDate, event.eventEndDate, event.eventDisplayPic, event.eventMetricType, event.eventMetricValue, parseInt(event.runId));\r\n                }\r\n            }).filter(updatedEvent => updatedEvent !== undefined);\r\n            state.eventRegistrationDetails = state.eventRegistrationDetails.concat(updatedEventRegistrationDetails);\r\n            return state;\r\n\r\n        case UPDATE_RUN_IN_EVENT_REGISTRATION:\r\n            var updatedEventRegistration = action.updatedEventRegistrationDetails;\r\n            let eventRegistrationDetailsIndex = state.eventRegistrationDetails.findIndex(eventDetails => eventDetails.eventId === updatedEventRegistration.eventId);\r\n            state.eventRegistrationDetails[eventRegistrationDetailsIndex].runId = updatedEventRegistration.runId;\r\n            return state;\r\n\r\n        case UPDATE_EVENT_RESULT_DETAILS:\r\n            var updatedEventResultDetails = action.eventResultDetails.map((eventResult) => {\r\n                if (state.eventResultDetails.findIndex(eventResultState => eventResultState.runId === eventResult.runId) < 0) {\r\n                    return new EventResultDetails(eventResult.eventId, eventResult.runId, eventResult.userRank);\r\n                }\r\n            }).filter(updatedEventResult => updatedEventResult !== undefined);\r\n            state.eventResultDetails = state.eventResultDetails.concat(updatedEventResultDetails);\r\n            return state;\r\n\r\n        case CLEAN_EVENT_STATE:\r\n            state.eventDetails = [];\r\n            state.eventRegistrationDetails = [];\r\n            state.eventResultDetails = [];\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n};"]},"metadata":{},"sourceType":"module"}