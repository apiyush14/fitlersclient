{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\screens\\\\RunTrackerHomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport RoundButton from \"../components/RoundButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIsFocused } from \"@react-navigation/native\";\nimport * as runActions from \"../store/run-actions\";\nimport * as eventActions from \"../store/event-actions\";\nimport * as Permissions from 'expo-permissions';\nimport StatusCodes from \"../utils/StatusCodes.json\";\nimport ChallengeList from \"../components/ChallengeList\";\nimport EventView from \"../components/EventView\";\n\nvar RunTrackerHomeScreen = function RunTrackerHomeScreen(props) {\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n  var eventRegistrationDetails = useSelector(function (state) {\n    return state.events.eventRegistrationDetails;\n  }).filter(function (event) {\n    return event.runId === 0;\n  });\n  var eventDetails = useSelector(function (state) {\n    return state.events.eventDetails;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: 31,\n    longitude: 74,\n    latitudeDelta: 0.000757,\n    longitudeDelta: 0.0008\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapRegion = _useState4[0],\n      setMapRegion = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalEventDetails = _useState8[0],\n      setModalEventDetails = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ongoingEventDetails = _useState10[0],\n      setOngoingEventDetails = _useState10[1];\n\n  useEffect(function () {\n    if (isFocused) {\n      setOngoingEventDetails(null);\n      checkAndUpdateOngoingEvent();\n    }\n  }, [props, isFocused]);\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(runActions.loadRuns());\n              dispatch(runActions.loadRunSummary());\n              dispatch(eventActions.loadEventsFromServer(0));\n              dispatch(eventActions.loadEventRegistrationDetails());\n              dispatch(eventActions.loadEventResultDetailsFromServer());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Permissions.askAsync(Permissions.MOTION).then(function (response) {\n                if (response.status !== 'granted') {\n                  Alert.alert(\"Location Alert\", \"Motion Sensor Permission is required!!!\");\n                }\n              });\n              Location.requestPermissionsAsync().then(function (response) {\n                if (response.status !== 'granted') {\n                  Alert.alert(\"Location Alert\", \"Location Permission is required!!!\");\n                } else {\n                  Location.getCurrentPositionAsync({}).then(function (response) {\n                    setMapRegion({\n                      latitude: response.coords.latitude,\n                      longitude: response.coords.longitude,\n                      latitudeDelta: 0.000757,\n                      longitudeDelta: 0.0008\n                    });\n                  });\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    (function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setOngoingEventDetails(null);\n              checkAndUpdateOngoingEvent();\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [eventRegistrationDetails]);\n\n  var checkAndUpdateOngoingEvent = function checkAndUpdateOngoingEvent() {\n    var currentTime = new Date().getTime();\n\n    if (eventRegistrationDetails !== null && eventRegistrationDetails.length > 0) {\n      eventRegistrationDetails.map(function (event) {\n        var eventStartDateTime = new Date(event.eventStartDate);\n        var eventEndDateTime = new Date(event.eventEndDate);\n\n        if (currentTime >= eventStartDateTime.getTime() && currentTime < eventEndDateTime.getTime()) {\n          setOngoingEventDetails(event);\n        }\n      });\n    }\n  };\n\n  var onClickEventItem = function onClickEventItem(eventItem) {\n    setModalEventDetails(eventItem);\n    setModalVisible(true);\n  };\n\n  var onCloseEventItem = function onCloseEventItem(eventItem) {\n    setModalVisible(false);\n  };\n\n  var onRegisterEventItem = function onRegisterEventItem(eventItem) {\n    dispatch(eventActions.registerUserForEvent(modalEventDetails)).then(function (response) {\n      if (response.status === StatusCodes.NO_INTERNET) {\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n          }\n        }], {\n          cancelable: false\n        });\n      } else if (response.status != StatusCodes.OK) {\n        Alert.alert(\"Registration Failed\", \"Registration for the event failed, please try again later!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n          }\n        }], {\n          cancelable: false\n        });\n      } else {\n        Alert.alert(\"Registration Successful\", \"You have been registered successfully, see you on Run Day!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    });\n  };\n\n  var loadMoreDataFromServer = function loadMoreDataFromServer() {\n    setIsLoading(true);\n    var pageNumber = Math.floor(eventDetails.length / 3);\n    dispatch(eventActions.loadEventsFromServer(pageNumber)).then(function () {\n      setIsLoading(false);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.runTrackerHomeContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 3\n    }\n  }, React.createElement(EventView, {\n    onRegisterEventItem: onRegisterEventItem,\n    onCloseEventItem: onCloseEventItem,\n    eventDetails: modalEventDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 4\n    }\n  })), ongoingEventDetails === null ? React.createElement(MapView, {\n    style: styles.mapContainerStyle,\n    region: mapRegion,\n    pitchEnabled: false,\n    rotateEnabled: false,\n    zoomEnabled: true,\n    scrollEnabled: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }\n  }, React.createElement(Marker, {\n    coordinate: mapRegion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 3\n    }\n  })) : React.createElement(View, {\n    style: styles.mapContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 4\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: \"http://192.168.1.66:7001/event-details/getDisplayImage/\" + ongoingEventDetails.eventId + \"?imageType=DISPLAY\"\n    },\n    style: styles.bgImageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  })), React.createElement(View, {\n    style: styles.runButtonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 3\n    }\n  }, React.createElement(RoundButton, {\n    title: \"Run\",\n    onPress: function onPress() {\n      props.navigation.navigate('LiveRunTracker', {\n        eventId: ongoingEventDetails !== null ? ongoingEventDetails.eventId : 0\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }\n  })), ongoingEventDetails === null ? React.createElement(View, {\n    style: styles.challengeListStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 3\n    }\n  }, React.createElement(ChallengeList, {\n    listData: eventDetails,\n    onEndReached: loadMoreDataFromServer,\n    isLoading: isLoading,\n    onClickEventItem: onClickEventItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 3\n    }\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  runTrackerHomeContainerStyle: {\n    flex: 1,\n    backgroundColor: 'lightgrey',\n    flexDirection: 'column'\n  },\n  mapContainerStyle: {\n    flex: 1,\n    borderRadius: 20\n  },\n  bgImageStyle: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  runButtonStyle: {\n    position: 'absolute',\n    top: '70%',\n    alignSelf: 'center',\n    opacity: 0.9\n  },\n  challengeListStyle: {\n    position: 'absolute',\n    top: '2%'\n  }\n});\nexport default RunTrackerHomeScreen;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/screens/RunTrackerHomeScreen.js"],"names":["React","useState","useEffect","MapView","Marker","Location","RoundButton","useDispatch","useSelector","useIsFocused","runActions","eventActions","Permissions","StatusCodes","ChallengeList","EventView","RunTrackerHomeScreen","props","dispatch","isFocused","eventRegistrationDetails","state","events","filter","event","runId","eventDetails","isLoading","setIsLoading","latitude","longitude","latitudeDelta","longitudeDelta","mapRegion","setMapRegion","modalVisible","setModalVisible","modalEventDetails","setModalEventDetails","ongoingEventDetails","setOngoingEventDetails","checkAndUpdateOngoingEvent","fetchData","loadRuns","loadRunSummary","loadEventsFromServer","loadEventRegistrationDetails","loadEventResultDetailsFromServer","askAsync","MOTION","then","response","status","Alert","alert","requestPermissionsAsync","getCurrentPositionAsync","coords","currentTime","Date","getTime","length","map","eventStartDateTime","eventStartDate","eventEndDateTime","eventEndDate","onClickEventItem","eventItem","onCloseEventItem","onRegisterEventItem","registerUserForEvent","NO_INTERNET","text","onPress","cancelable","OK","loadMoreDataFromServer","pageNumber","Math","floor","styles","runTrackerHomeContainerStyle","mapContainerStyle","uri","eventId","bgImageStyle","runButtonStyle","navigation","navigate","challengeListStyle","StyleSheet","create","flex","backgroundColor","flexDirection","borderRadius","position","width","height","top","alignSelf","opacity"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {View,StyleSheet,Alert,Modal,ImageBackground,Text} from 'react-native';\r\nimport MapView, {Marker} from 'react-native-maps';\r\nimport * as Location from 'expo-location';\r\nimport RoundButton from '../components/RoundButton';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {useIsFocused} from \"@react-navigation/native\";\r\nimport * as runActions from '../store/run-actions';\r\nimport * as eventActions from '../store/event-actions';\r\nimport * as Permissions from 'expo-permissions';\r\nimport StatusCodes from \"../utils/StatusCodes.json\";\r\n\r\nimport ChallengeList from '../components/ChallengeList';\r\nimport EventView from '../components/EventView';\r\n//import * as Linking from 'expo-linking';\r\n\r\nconst RunTrackerHomeScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isFocused = useIsFocused();\r\n\r\n  // State Selectors\r\n  const eventRegistrationDetails = useSelector(state => state.events.eventRegistrationDetails).filter(event => event.runId === 0);\r\n  const eventDetails = useSelector(state => state.events.eventDetails);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // State Variables\r\n  const [mapRegion, setMapRegion] = useState({\r\n    latitude: 31,\r\n    longitude: 74,\r\n    latitudeDelta: 0.000757,\r\n    longitudeDelta: 0.0008\r\n  });\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalEventDetails, setModalEventDetails] = useState(null);\r\n  const [ongoingEventDetails, setOngoingEventDetails] = useState(null);\r\n\r\n  // Use Effect Hook to be loaded everytime the screen loads\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setOngoingEventDetails(null);\r\n      checkAndUpdateOngoingEvent();\r\n    }\r\n  }, [props, isFocused]);\r\n\r\n  //Async Load User Data upon initialization\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch(runActions.loadRuns());\r\n      dispatch(runActions.loadRunSummary());\r\n      dispatch(eventActions.loadEventsFromServer(0));\r\n      dispatch(eventActions.loadEventRegistrationDetails());\r\n      dispatch(eventActions.loadEventResultDetailsFromServer());\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //Load Location Details\r\n  useEffect(() => {\r\n    (async () => {\r\n\r\n      Permissions.askAsync(Permissions.MOTION).then(response => {\r\n        //TODO : To handle alert to change settings\r\n        //Motion Sensor Permission Handling\r\n        if (response.status !== 'granted') {\r\n          Alert.alert(\"Location Alert\", \"Motion Sensor Permission is required!!!\");\r\n        }\r\n      });\r\n\r\n      Location.requestPermissionsAsync().then(response => {\r\n        if (response.status !== 'granted') {\r\n          //TODO : To handle alert to change settings\r\n          Alert.alert(\"Location Alert\", \"Location Permission is required!!!\");\r\n          //Linking.openURL('app-settings:');\r\n        } else {\r\n          Location.getCurrentPositionAsync({}).then(response => {\r\n            setMapRegion({\r\n              latitude: response.coords.latitude,\r\n              longitude: response.coords.longitude,\r\n              latitudeDelta: 0.000757,\r\n              longitudeDelta: 0.0008\r\n            });\r\n          });\r\n        }\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  //Use effect for Event Registration Changes\r\n  useEffect(() => {\r\n    (async () => {\r\n      setOngoingEventDetails(null);\r\n      checkAndUpdateOngoingEvent();\r\n    })();\r\n  }, [eventRegistrationDetails]);\r\n\r\n  //Method to check if there is an Ongoing Event\r\n  const checkAndUpdateOngoingEvent = () => {\r\n    let currentTime = new Date().getTime();\r\n    if (eventRegistrationDetails !== null && eventRegistrationDetails.length > 0) {\r\n      eventRegistrationDetails.map((event) => {\r\n        var eventStartDateTime = new Date(event.eventStartDate);\r\n        var eventEndDateTime = new Date(event.eventEndDate);\r\n        if (currentTime >= eventStartDateTime.getTime() &&\r\n          currentTime < eventEndDateTime.getTime()) {\r\n          setOngoingEventDetails(event);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  //Click Event Item Listener\r\n  const onClickEventItem = (eventItem) => {\r\n    setModalEventDetails(eventItem);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  //Close Event Item Listener\r\n  const onCloseEventItem = (eventItem) => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  //Register Event Listener\r\n  const onRegisterEventItem = (eventItem) => {\r\n    dispatch(eventActions.registerUserForEvent(modalEventDetails)).then((response) => {\r\n      if (response.status === StatusCodes.NO_INTERNET) {\r\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false)\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else\r\n      if (response.status != StatusCodes.OK) {\r\n        Alert.alert(\"Registration Failed\", \"Registration for the event failed, please try again later!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false)\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else {\r\n        Alert.alert(\"Registration Successful\", \"You have been registered successfully, see you on Run Day!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false)\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //Method to lazy load Events from server \r\n  const loadMoreDataFromServer = () => {\r\n    setIsLoading(true);\r\n    let pageNumber = Math.floor(eventDetails.length / 3);\r\n    dispatch(eventActions.loadEventsFromServer(pageNumber)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n//Logic to handle shutter tab for challenges\r\n\r\n/*\r\nvar isHidden = true;\r\nconst [bounceValue, setBounceValue] = useState(new Animated.Value(360));\r\n\r\nconst toggleSubView=()=>{\r\n var toValue = 360;\r\n if(isHidden) {\r\n  toValue = 0;\r\n}\r\nAnimated.spring(\r\n  bounceValue,\r\n  {\r\n    toValue: toValue,\r\n    velocity: 3,\r\n    tension: 2,\r\n    friction: 8,\r\n    useNativeDriver: true\r\n  }\r\n  ).start();\r\nisHidden = !isHidden;\r\n};*/\r\n\r\n//View\r\nreturn (\r\n  <View style={styles.runTrackerHomeContainerStyle}>\r\n   \r\n  <Modal animationType=\"slide\" transparent={true} visible={modalVisible}\r\n  onRequestClose={()=>{}}>\r\n   <EventView \r\n   onRegisterEventItem={onRegisterEventItem} \r\n   onCloseEventItem={onCloseEventItem} \r\n   eventDetails={modalEventDetails}/>\r\n  </Modal>\r\n\r\n  {ongoingEventDetails===null?(\r\n  <MapView style={styles.mapContainerStyle} region={mapRegion}\r\n  pitchEnabled={false} rotateEnabled={false} zoomEnabled={true} scrollEnabled={false}>\r\n  <Marker coordinate={mapRegion}/>\r\n  </MapView>)\r\n  :(\r\n   <View style={styles.mapContainerStyle}>\r\n    <ImageBackground\r\n      source={{uri:\"http://192.168.1.66:7001/event-details/getDisplayImage/\"+ongoingEventDetails.eventId+\"?imageType=DISPLAY\"}}\r\n      style={styles.bgImageStyle}>\r\n    </ImageBackground>\r\n   </View>\r\n  )}\r\n\r\n  <View style={styles.runButtonStyle}>\r\n   <RoundButton\r\n   title=\"Run\"\r\n   onPress={()=>{props.navigation.navigate('LiveRunTracker',{eventId: ongoingEventDetails!==null?ongoingEventDetails.eventId:0})}}/>\r\n  </View>\r\n\r\n  {ongoingEventDetails===null?(\r\n  <View style={styles.challengeListStyle}>\r\n  <ChallengeList \r\n  listData={eventDetails}\r\n  onEndReached={loadMoreDataFromServer}\r\n  isLoading={isLoading}\r\n  onClickEventItem={onClickEventItem}/>\r\n  </View>):(<View></View>)}\r\n\r\n  {/* Commented for now as Challenge is out of scope for now\r\n  <Animated.View style={[styles.subView,{transform: [{translateY:bounceValue}]}]}>\r\n  <Button title=\"Challenge\" onPress={()=>{toggleSubView()}}/>\r\n  <View style={styles.tabListView}>\r\n  <ChallengeList listData={CHALLENGES}/>\r\n  </View>\r\n  </Animated.View>*/}\r\n\r\n  </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  runTrackerHomeContainerStyle: {\r\n    flex: 1,\r\n    backgroundColor: 'lightgrey',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  mapContainerStyle: {\r\n    flex: 1,\r\n    borderRadius: 20\r\n  },\r\n\r\n  bgImageStyle: {\r\n    flex: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n\r\n  runButtonStyle: {\r\n    position: 'absolute',\r\n    top: '70%',\r\n    alignSelf: 'center',\r\n    opacity: 0.9\r\n  },\r\n\r\n  challengeListStyle: {\r\n    position: 'absolute',\r\n    top: '2%'\r\n  },\r\n\r\n  /*tabListView: {\r\n    position: 'absolute',\r\n    top: '20%'\r\n  },\r\n\r\n  subView: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"white\",\r\n    height: 400,\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    bottom: 0\r\n  }*/\r\n});\r\n\r\nexport default RunTrackerHomeScreen;"]},"metadata":{},"sourceType":"module"}