{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\navigation\\\\RunTrackerNavigator.js\";\nimport React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport RunTrackerHomeScreen from \"../screens/RunTrackerHomeScreen\";\nimport LiveRunTracker from \"../screens/LiveRunTracker\";\nimport RunDetailsScreen from \"../screens/RunDetailsScreen\";\nimport RunHistoryScreen from \"../screens/RunHistoryScreen\";\nimport LogInScreen from \"../screens/LogInScreen\";\nimport LogOutScreen from \"../screens/LogOutScreen\";\nimport SplashScreen from \"../screens/SplashScreen\";\nimport TermsAndConditions from \"../screens/TermsAndConditions\";\nimport Privacy from \"../screens/Privacy\";\nimport UserDetailsScreen from \"../screens/UserDetailsScreen\";\nimport EventsListSummaryScreen from \"../screens/EventsListSummaryScreen\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as userActions from \"../store/user-actions\";\nvar drawerNavigator = createDrawerNavigator();\nvar stackNavigator = createStackNavigator();\nvar tabNavigator = createBottomTabNavigator();\n\nvar RunTrackerNavigator = function RunTrackerNavigator() {\n  var dispatch = useDispatch();\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(drawerNavigator.Navigator, {\n    screenOptions: {\n      swipeEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(drawerNavigator.Screen, {\n    name: \"Home\",\n    component: RunTrackerTabNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(drawerNavigator.Screen, {\n    name: \"Terms & Conditions\",\n    component: TermsAndConditions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), React.createElement(drawerNavigator.Screen, {\n    name: \"Privacy\",\n    component: Privacy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), React.createElement(drawerNavigator.Screen, {\n    name: \"LogOut\",\n    component: LogOutScreen,\n    listeners: function listeners(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        state: function state(e) {\n          if (e.data.state.index === 3) {\n            dispatch(userActions.cleanUserDataStateAndDB());\n          }\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar RunTrackerTabNavigator = function RunTrackerTabNavigator(_ref2) {\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n  var currentActiveScreenName = getActiveScreenName(route);\n  var isTabNavigationVisible = currentActiveScreenName === 'HomeScreen' || currentActiveScreenName === 'HomeScreen' || currentActiveScreenName === 'History' || currentActiveScreenName === 'RunHistoryScreen' || currentActiveScreenName === 'Events' || currentActiveScreenName === 'RunDetailsScreen' ? true : false;\n  return React.createElement(tabNavigator.Navigator, {\n    screenOptions: function screenOptions(screenRoute) {\n      return {\n        tabBarVisible: isTabNavigationVisible,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (screenRoute.route.name === 'Home') {\n            iconName = focused ? Platform.OS === 'android' ? 'md-home' : 'ios-home' : Platform.OS === 'android' ? 'md-home' : 'ios-home';\n          } else if (screenRoute.route.name === 'History') {\n            iconName = focused ? Platform.OS === 'android' ? 'md-stats' : 'ios-stats' : Platform.OS === 'android' ? 'md-stats' : 'ios-stats';\n          } else if (screenRoute.route.name === 'Events') {\n            iconName = focused ? Platform.OS === 'android' ? 'md-trophy' : 'ios-trophy' : Platform.OS === 'android' ? 'md-trophy' : 'ios-trophy';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: 25,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 14\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, React.createElement(tabNavigator.Screen, {\n    name: \"Home\",\n    component: RunTrackerStackNavigator,\n    listeners: {\n      tabPress: function tabPress(e) {}\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }), React.createElement(tabNavigator.Screen, {\n    name: \"Events\",\n    component: EventsStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }), React.createElement(tabNavigator.Screen, {\n    name: \"History\",\n    component: RunTrackerHistoryStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar RunTrackerStackNavigator = function RunTrackerStackNavigator(_ref4) {\n  var navigation = _ref4.navigation,\n      route = _ref4.route;\n  var authDetails = useSelector(function (state) {\n    return state.authDetails;\n  });\n  var userDetails = useSelector(function (state) {\n    return state.userDetails;\n  });\n  return React.createElement(stackNavigator.Navigator, {\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, authDetails === null || authDetails.userId === undefined || authDetails.userId === null || userDetails === null || userDetails.userFirstName === undefined || userDetails.userFirstName === null ? React.createElement(stackNavigator.Screen, {\n    name: \"LoginStackNavigator\",\n    component: LoginStackNavigator,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, React.createElement(stackNavigator.Screen, {\n    name: \"HomeScreen\",\n    component: RunTrackerHomeScreen,\n    options: {\n      tabBarVisible: false,\n      title: 'Runner Home',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          styles: styles.person,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }\n        }, React.createElement(Ionicons, {\n          name: Platform.OS === 'android' ? 'md-person' : 'ios-person',\n          size: 40,\n          color: \"grey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }\n        })));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"RunHistoryScreen\",\n    component: RunHistoryScreen,\n    options: {\n      title: 'Wall of Fame'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"LiveRunTracker\",\n    component: LiveRunTracker,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"RunDetailsScreen\",\n    component: RunDetailsScreen,\n    options: {\n      title: 'Run Details',\n      headerLeft: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar RunTrackerHistoryStackNavigator = function RunTrackerHistoryStackNavigator(_ref5) {\n  var navigation = _ref5.navigation,\n      route = _ref5.route;\n  return React.createElement(stackNavigator.Navigator, {\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, React.createElement(stackNavigator.Screen, {\n    name: \"RunHistoryScreen\",\n    component: RunHistoryScreen,\n    options: {\n      title: 'Wall of Fame'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"RunDetailsScreen\",\n    component: RunDetailsScreen,\n    options: {\n      title: 'Run Details'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  person: {\n    left: 10\n  }\n});\n\nvar LoginStackNavigator = function LoginStackNavigator(_ref6) {\n  var navigation = _ref6.navigation,\n      route = _ref6.route;\n  return React.createElement(stackNavigator.Navigator, {\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, React.createElement(stackNavigator.Screen, {\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    options: {\n      headerShown: false,\n      tabBarVisible: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"LogInScreen\",\n    component: LogInScreen,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), React.createElement(stackNavigator.Screen, {\n    name: \"UserDetailsScreen\",\n    component: UserDetailsScreen,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar EventsStackNavigator = function EventsStackNavigator(_ref7) {\n  var navigation = _ref7.navigation,\n      route = _ref7.route;\n  return React.createElement(stackNavigator.Navigator, {\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, React.createElement(stackNavigator.Screen, {\n    name: \"EventsListSummaryScreen\",\n    component: EventsListSummaryScreen,\n    options: {\n      title: 'Events'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar getActiveScreenName = function getActiveScreenName(route) {\n  if (route && route.state) {\n    if (route.state.index >= 0 && route.state.routes) {\n      return getActiveScreenName(route.state.routes[route.state.index]);\n    }\n  } else {\n    return route.name;\n  }\n};\n\nexport default RunTrackerNavigator;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/navigation/RunTrackerNavigator.js"],"names":["React","Ionicons","createDrawerNavigator","createStackNavigator","createBottomTabNavigator","NavigationContainer","RunTrackerHomeScreen","LiveRunTracker","RunDetailsScreen","RunHistoryScreen","LogInScreen","LogOutScreen","SplashScreen","TermsAndConditions","Privacy","UserDetailsScreen","EventsListSummaryScreen","useDispatch","useSelector","userActions","drawerNavigator","stackNavigator","tabNavigator","RunTrackerNavigator","dispatch","swipeEnabled","RunTrackerTabNavigator","navigation","state","e","data","index","cleanUserDataStateAndDB","route","currentActiveScreenName","getActiveScreenName","isTabNavigationVisible","screenRoute","tabBarVisible","tabBarIcon","focused","color","size","iconName","name","Platform","OS","activeTintColor","inactiveTintColor","RunTrackerStackNavigator","tabPress","EventsStackNavigator","RunTrackerHistoryStackNavigator","authDetails","userDetails","gestureEnabled","userId","undefined","userFirstName","LoginStackNavigator","headerShown","title","headerLeft","styles","person","toggleDrawer","StyleSheet","create","left","routes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport { Platform, View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport {createDrawerNavigator} from '@react-navigation/drawer';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport RunTrackerHomeScreen from '../screens/RunTrackerHomeScreen';\r\nimport LiveRunTracker from '../screens/LiveRunTracker';\r\nimport RunDetailsScreen from '../screens/RunDetailsScreen';\r\nimport RunHistoryScreen from '../screens/RunHistoryScreen';\r\nimport LogInScreen from '../screens/LogInScreen';\r\nimport LogOutScreen from '../screens/LogOutScreen';\r\nimport SplashScreen from '../screens/SplashScreen';\r\nimport TermsAndConditions from '../screens/TermsAndConditions';\r\nimport Privacy from '../screens/Privacy';\r\nimport UserDetailsScreen from '../screens/UserDetailsScreen';\r\nimport EventsListSummaryScreen from '../screens/EventsListSummaryScreen';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as userActions from '../store/user-actions';\r\n\r\nconst drawerNavigator = createDrawerNavigator();\r\nconst stackNavigator=createStackNavigator();\r\nconst tabNavigator=createBottomTabNavigator();\r\n\r\n//Main Navigator\r\nconst RunTrackerNavigator=()=>{\r\n  const dispatch=useDispatch();\r\n  return (\r\n    <NavigationContainer>\r\n    <drawerNavigator.Navigator screenOptions={{\r\n      swipeEnabled: false\r\n    }}>\r\n    <drawerNavigator.Screen name=\"Home\" component={RunTrackerTabNavigator}/>\r\n    <drawerNavigator.Screen name=\"Terms & Conditions\" component={TermsAndConditions}/>\r\n    <drawerNavigator.Screen name=\"Privacy\" component={Privacy}/>\r\n    <drawerNavigator.Screen name=\"LogOut\" component={LogOutScreen}\r\n    listeners={({ navigation }) => ({\r\n        state: (e) => {\r\n        if (e.data.state.index === 3) {\r\n          dispatch(userActions.cleanUserDataStateAndDB());\r\n        }\r\n        }\r\n    })}\r\n    />\r\n    </drawerNavigator.Navigator>\r\n    </NavigationContainer>\r\n    );\r\n};\r\n\r\n// Tab Navigator\r\nconst RunTrackerTabNavigator=({navigation, route})=>{\r\n  var currentActiveScreenName=getActiveScreenName(route);\r\n  var isTabNavigationVisible= currentActiveScreenName==='HomeScreen'\r\n  ||currentActiveScreenName==='HomeScreen'\r\n  ||currentActiveScreenName==='History'\r\n  ||currentActiveScreenName==='RunHistoryScreen'\r\n  ||currentActiveScreenName==='Events'\r\n  ||currentActiveScreenName==='RunDetailsScreen'\r\n  ?true:false;\r\n  \r\n  return (\r\n   <tabNavigator.Navigator \r\n   screenOptions={(screenRoute) => ({\r\n    tabBarVisible: isTabNavigationVisible,\r\n    tabBarIcon: ({ focused, color, size }) => {\r\n      let iconName;\r\n      if (screenRoute.route.name === 'Home') {\r\n        iconName = focused\r\n        ? Platform.OS === 'android'?'md-home':'ios-home'\r\n        : Platform.OS === 'android'?'md-home':'ios-home';\r\n      } else if (screenRoute.route.name === 'History') {\r\n        iconName = focused \r\n        ? Platform.OS === 'android'?'md-stats':'ios-stats' \r\n        : Platform.OS === 'android'?'md-stats':'ios-stats';\r\n      }\r\n        else if (screenRoute.route.name === 'Events') {\r\n        iconName = focused \r\n        ? Platform.OS === 'android'?'md-trophy':'ios-trophy' \r\n        : Platform.OS === 'android'?'md-trophy':'ios-trophy';\r\n      }\r\n      return <Ionicons name={iconName} size={25} color={color} />;\r\n    },\r\n  })}\r\n\r\n   tabBarOptions={{\r\n    activeTintColor: 'tomato',\r\n    inactiveTintColor: 'gray'\r\n  }}\r\n  >\r\n  <tabNavigator.Screen name=\"Home\" component={RunTrackerStackNavigator} \r\n  listeners={{\r\n    tabPress: e=>{\r\n    }\r\n  }}/>\r\n  <tabNavigator.Screen name=\"Events\" component={EventsStackNavigator} />\r\n  <tabNavigator.Screen name=\"History\" component={RunTrackerHistoryStackNavigator} />\r\n  </tabNavigator.Navigator>\r\n  );\r\n};\r\n\r\n//Main Stack Navigator\r\nconst RunTrackerStackNavigator=({navigation, route})=>{\r\n  const authDetails = useSelector(state => state.authDetails);\r\n  const userDetails = useSelector(state => state.userDetails);\r\n\r\n  return (\r\n    <stackNavigator.Navigator screenOptions={{gestureEnabled: false}}>\r\n    {(authDetails===null)\r\n      ||(authDetails.userId===undefined)\r\n      ||(authDetails.userId===null) \r\n      ||(userDetails===null) \r\n      ||(userDetails.userFirstName===undefined)\r\n      ||(userDetails.userFirstName===null) ? (\r\n    <stackNavigator.Screen name=\"LoginStackNavigator\" component={LoginStackNavigator}\r\n     options={{\r\n      headerShown: false\r\n    }}\r\n    /> \r\n    ): (\r\n    <React.Fragment>\r\n    <stackNavigator.Screen name=\"HomeScreen\" component={RunTrackerHomeScreen} \r\n    options={{\r\n      tabBarVisible: false,\r\n      title: 'Runner Home',\r\n      headerLeft: ()=>{\r\n        return (\r\n          <View styles={styles.person}>\r\n          <TouchableOpacity onPress={()=>navigation.toggleDrawer()}>\r\n          <Ionicons name={Platform.OS === 'android'?'md-person':'ios-person'} size={40} color='grey'/>\r\n          </TouchableOpacity>\r\n          </View>\r\n          );\r\n      } \r\n    }}/>\r\n    <stackNavigator.Screen name=\"RunHistoryScreen\" component={RunHistoryScreen} \r\n    options={{\r\n      title: 'Wall of Fame'\r\n    }}/>\r\n    <stackNavigator.Screen name=\"LiveRunTracker\" component={LiveRunTracker} \r\n    options={{\r\n      headerShown: false\r\n    }}/>\r\n    <stackNavigator.Screen name=\"RunDetailsScreen\" component={RunDetailsScreen}\r\n    options={{\r\n      title: 'Run Details',\r\n      headerLeft: null\r\n    }}/>\r\n    </React.Fragment>\r\n     )}\r\n    </stackNavigator.Navigator>\r\n    );\r\n  };\r\n\r\n  //Run History Stack Navigator\r\n  const RunTrackerHistoryStackNavigator=({navigation, route})=>{\r\n    return (\r\n      <stackNavigator.Navigator screenOptions={{gestureEnabled: false}}>\r\n      <stackNavigator.Screen name=\"RunHistoryScreen\" component={RunHistoryScreen} \r\n      options={{\r\n        title: 'Wall of Fame'\r\n      }}/>\r\n      <stackNavigator.Screen name=\"RunDetailsScreen\" component={RunDetailsScreen}\r\n    options={{\r\n      title: 'Run Details'\r\n    }}/>\r\n      </stackNavigator.Navigator>\r\n      );\r\n    };\r\n\r\n   const styles = StyleSheet.create({\r\n     person: {\r\n       left: 10\r\n     }\r\n   });\r\n\r\n  //Login Stack Navigator\r\n  const LoginStackNavigator=({navigation, route})=>{\r\n    return (\r\n      <stackNavigator.Navigator \r\n      screenOptions={\r\n        {gestureEnabled: false}\r\n       }>\r\n      <stackNavigator.Screen name=\"SplashScreen\" component={SplashScreen} \r\n      options={{\r\n        headerShown: false,\r\n        tabBarVisible: false\r\n      }}/>\r\n      <stackNavigator.Screen name=\"LogInScreen\" component={LogInScreen} \r\n      options={{\r\n        headerShown: false\r\n      }}/>\r\n      <stackNavigator.Screen name=\"UserDetailsScreen\" component={UserDetailsScreen} \r\n      options={{\r\n        headerShown: false\r\n      }}/>\r\n      </stackNavigator.Navigator>\r\n      );\r\n    };\r\n\r\n  //Events Stack Navigator\r\n  const EventsStackNavigator=({navigation, route})=>{\r\n    return (\r\n      <stackNavigator.Navigator \r\n      screenOptions={\r\n        {gestureEnabled: false}\r\n       }>\r\n      <stackNavigator.Screen name=\"EventsListSummaryScreen\" component={EventsListSummaryScreen} \r\n      options={{\r\n        title: 'Events'\r\n      }}/>\r\n      </stackNavigator.Navigator>\r\n      );\r\n    };\r\n\r\n//Private Utility Method to Get Active Screen Name Recursively    \r\nconst getActiveScreenName = (route) => {\r\n  if (route && route.state) {\r\n    if (route.state.index >= 0 && route.state.routes) {\r\n      return getActiveScreenName(route.state.routes[route.state.index]);\r\n    }\r\n  } else {\r\n    return route.name;\r\n  }\r\n};\r\n \r\nexport default RunTrackerNavigator;\r\n"]},"metadata":{},"sourceType":"module"}