{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\screens\\\\RunDetailsScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport MapView, { Marker, Polyline } from 'react-native-maps';\nimport { scale, moderateScale, verticalScale } from \"../utils/Utils\";\nimport StatusCodes from \"../utils/StatusCodes.json\";\nimport { useDispatch } from 'react-redux';\nimport * as runActions from \"../store/run-actions\";\nimport Card from \"../components/Card\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useSelector } from 'react-redux';\nimport { useIsFocused } from \"@react-navigation/native\";\nimport RunDetails from \"../models/rundetails\";\nvar isCalledFromHistoryScreen = false;\nvar runStartDateTime = null;\nvar runId = 0;\nvar eventId = 0;\nvar runDetails = null;\n\nvar RunDetailsScreen = function RunDetailsScreen(props) {\n  var eventResultDetails = useSelector(function (state) {\n    return state.events.eventResultDetails;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      runPath = _useState2[0],\n      setRunPath = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapRegion = _useState4[0],\n      setMapRegion = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      runDate = _useState6[0],\n      setRunDate = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      runDay = _useState8[0],\n      setRunDay = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      runDistance = _useState10[0],\n      setRunDistance = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      runTotalTime = _useState12[0],\n      setRunTotalTime = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      runCaloriesBurnt = _useState14[0],\n      setRunCaloriesBurnt = _useState14[1];\n\n  var _useState15 = useState(0.00),\n      _useState16 = _slicedToArray(_useState15, 2),\n      runPace = _useState16[0],\n      setRunPace = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      userRank = _useState18[0],\n      setUserRank = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isEvent = _useState20[0],\n      setIsEvent = _useState20[1];\n\n  var _useState21 = useState({\n    seconds: \"00\",\n    minutes: \"00\",\n    hours: \"00\"\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      trackTimer = _useState22[0],\n      setTrackTimer = _useState22[1];\n\n  useEffect(function () {\n    runDetails = props.route.params.runDetails;\n\n    if (props.route.params.sourceScreen) {\n      if (props.route.params.sourceScreen === 'RunHistoryScreen') {\n        isCalledFromHistoryScreen = true;\n      }\n    }\n\n    if (parseInt(runDetails.eventId) > 0) {\n      var eventResult = eventResultDetails.find(function (eventResult) {\n        return eventResult.runId === runDetails.runId;\n      });\n      setUserRank(eventResult !== undefined ? eventResult.userRank : 0);\n      setIsEvent(true);\n    }\n\n    if (runDetails.runDistance) {\n      var pathArray = runDetails.runPath;\n\n      if (pathArray.length > 0) {\n        setRunPath(pathArray);\n        setMapRegion({\n          latitude: pathArray[Math.floor(pathArray.length / 2)].latitude,\n          longitude: pathArray[Math.floor(pathArray.length / 2)].longitude,\n          latitudeDelta: Math.abs(pathArray[pathArray.length - 1].latitude - pathArray[0].latitude) + 0.005,\n          longitudeDelta: Math.abs(pathArray[pathArray.length - 1].longitude - pathArray[0].longitude) + 0.005\n        });\n      }\n\n      setRunDate(runDetails.runDate);\n      setRunDay(runDetails.runDay);\n      setRunDistance(runDetails.runDistance);\n      setRunPace(runDetails.runPace);\n      setRunCaloriesBurnt(runDetails.runCaloriesBurnt);\n      runStartDateTime = runDetails.runStartDateTime;\n      runId = runDetails.runId;\n      eventId = runDetails.eventId;\n      var runTotalTimeVar = runDetails.runTotalTime;\n      var secondsVar = (\"0\" + Math.floor(runTotalTimeVar / 1000) % 60).slice(-2);\n      var minutesVar = (\"0\" + Math.floor(runTotalTimeVar / 60000) % 60).slice(-2);\n      var hoursVar = (\"0\" + Math.floor(runTotalTimeVar / 3600000)).slice(-2);\n      setTrackTimer({\n        seconds: secondsVar,\n        minutes: minutesVar,\n        hours: hoursVar\n      });\n      setRunTotalTime(runTotalTimeVar);\n    }\n\n    saveRun();\n  }, [props.route.params]);\n\n  var saveRun = function saveRun() {\n    if (!isCalledFromHistoryScreen) {\n      dispatch(runActions.addRun(runDetails)).then(function (response) {\n        if (runDetails.eventId > 0) {\n          if (response.status === StatusCodes.NO_INTERNET) {\n            Alert.alert(\"Internet Issue\", \"Your Event Run is not yet submitted due to connectivity issue, please check the internet connection and reload the application to submit this run!!!\");\n          } else if (response.status === StatusCodes.DISTANCE_NOT_ELIGIBLE) {\n            Alert.alert(\"Run Not Eligible\", \"Your Event Run is not eligible for submission, we have saved it as a normal run!!!\");\n          } else if (response.status >= StatusCodes.BAD_REQUEST) {\n            Alert.alert(\"Technical Issue\", \"Your Event Run is not yet submitted due to technical issue, please reload the application to submit this run!!!\");\n          } else {\n            Alert.alert(\"Success\", \"Your Event Run has been submitted successfully!!!\");\n          }\n        } else if (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\n          Alert.alert(\"Run Not Saved\", \"Sorry, we could not save this Run!!!\");\n        }\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.runDetailsContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 2\n    }\n  }, runPath && runPath.length > 0 ? React.createElement(MapView, {\n    style: styles.mapContainerStyle,\n    region: mapRegion,\n    pitchEnabled: true,\n    rotateEnabled: true,\n    zoomEnabled: true,\n    scrollEnabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, React.createElement(Polyline, {\n    strokeWidth: 5,\n    strokeColor: \"red\",\n    coordinates: runPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }), runPath[0] !== undefined ? React.createElement(Marker, {\n    pinColor: \"green\",\n    coordinate: runPath[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 57\n    }\n  }), runPath[runPath.length - 1] !== undefined ? React.createElement(Marker, {\n    pinColor: \"red\",\n    coordinate: runPath[runPath.length - 1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 70\n    }\n  })) : React.createElement(View, {\n    style: styles.mapContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/images/no_location.jpg\"),\n    style: styles.bgImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  })), React.createElement(View, {\n    style: styles.scrollViewContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 2\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.runMetricsContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  }, isEvent && userRank > 0 ? React.createElement(View, {\n    style: styles.rowStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }\n  }, React.createElement(Card, {\n    style: {\n      width: '97%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-trophy\" : \"ios-trophy\",\n    size: 25,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.largeTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, userRank), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Rank\"))) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 14\n    }\n  }), React.createElement(View, {\n    style: styles.rowStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }\n  }, React.createElement(Card, {\n    style: {\n      width: '60%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-walk\" : \"ios-walk\",\n    size: 30,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.largeTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, parseFloat(runDistance / 1000).toFixed(2), \" KM\")), React.createElement(Card, {\n    style: {\n      width: '35%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-stopwatch\" : \"ios-stopwatch\",\n    size: 20,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }\n  }, trackTimer.hours, \":\", trackTimer.minutes, \":\", trackTimer.seconds), React.createElement(Text, {\n    style: styles.smallTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }, \"HH:MM:SS\"))), React.createElement(View, {\n    style: styles.rowStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }\n  }, React.createElement(Card, {\n    style: {\n      width: '35%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-calendar\" : \"ios-calendar\",\n    size: 25,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, runDate), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, runDay)), React.createElement(Card, {\n    style: {\n      width: '25%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-flame\" : \"ios-flame\",\n    size: 25,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, parseFloat(runCaloriesBurnt).toFixed(2)), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"Calories\")), React.createElement(Card, {\n    style: {\n      width: '33%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === 'android' ? \"md-speedometer\" : \"ios-speedometer\",\n    size: 25,\n    color: \"springgreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, parseFloat(runPace).toFixed(2)), React.createElement(Text, {\n    style: styles.mediumTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"Pace\"))))));\n};\n\nvar styles = StyleSheet.create({\n  runDetailsContainerStyle: {\n    flex: 1,\n    backgroundColor: 'lightgrey',\n    flexDirection: 'column'\n  },\n  mapContainerStyle: {\n    flex: 0.4,\n    borderRadius: 20\n  },\n  scrollViewContainerStyle: {\n    flex: 0.6\n  },\n  runMetricsContainerStyle: {\n    flexDirection: 'column',\n    alignSelf: 'center'\n  },\n  bgImage: {\n    flex: 1\n  },\n  rowStyle: {\n    flex: 1,\n    height: '30%',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  largeTextStyle: {\n    fontSize: moderateScale(40, 0.8),\n    color: 'springgreen'\n  },\n  mediumTextStyle: {\n    fontSize: moderateScale(17, 0.8),\n    color: 'springgreen'\n  },\n  smallTextStyle: {\n    padding: '3%',\n    fontSize: moderateScale(10, 0.8),\n    color: 'springgreen'\n  }\n});\nexport default RunDetailsScreen;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/screens/RunDetailsScreen.js"],"names":["React","useState","useEffect","MapView","Marker","Polyline","scale","moderateScale","verticalScale","StatusCodes","useDispatch","runActions","Card","Ionicons","useSelector","useIsFocused","RunDetails","isCalledFromHistoryScreen","runStartDateTime","runId","eventId","runDetails","RunDetailsScreen","props","eventResultDetails","state","events","dispatch","runPath","setRunPath","mapRegion","setMapRegion","runDate","setRunDate","runDay","setRunDay","runDistance","setRunDistance","runTotalTime","setRunTotalTime","runCaloriesBurnt","setRunCaloriesBurnt","runPace","setRunPace","userRank","setUserRank","isEvent","setIsEvent","seconds","minutes","hours","trackTimer","setTrackTimer","route","params","sourceScreen","parseInt","eventResult","find","undefined","pathArray","length","latitude","Math","floor","longitude","latitudeDelta","abs","longitudeDelta","runTotalTimeVar","secondsVar","slice","minutesVar","hoursVar","saveRun","addRun","then","response","status","NO_INTERNET","Alert","alert","DISTANCE_NOT_ELIGIBLE","BAD_REQUEST","INTERNAL_SERVER_ERROR","styles","runDetailsContainerStyle","mapContainerStyle","require","bgImage","scrollViewContainerStyle","runMetricsContainerStyle","rowStyle","width","Platform","OS","largeTextStyle","mediumTextStyle","parseFloat","toFixed","smallTextStyle","StyleSheet","create","flex","backgroundColor","flexDirection","borderRadius","alignSelf","height","alignItems","fontSize","color","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, ScrollView, Platform, ImageBackground} from 'react-native';\r\nimport MapView, {Marker, Polyline} from 'react-native-maps';\r\nimport { scale, moderateScale, verticalScale} from '../utils/Utils';\r\nimport StatusCodes from \"../utils/StatusCodes.json\";\r\nimport { useDispatch } from 'react-redux';\r\nimport * as runActions from '../store/run-actions';\r\nimport Card from '../components/Card';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {useSelector} from 'react-redux';\r\nimport {useIsFocused} from \"@react-navigation/native\";\r\nimport RunDetails from '../models/rundetails';\r\n\r\nvar isCalledFromHistoryScreen = false;\r\nlet runStartDateTime = null;\r\nlet runId = 0;\r\nlet eventId = 0;\r\nlet runDetails = null;\r\n\r\nconst RunDetailsScreen = props=>{\r\n\r\n  // State Selectors\r\n  const eventResultDetails = useSelector(state => state.events.eventResultDetails);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //State Variables\r\n  //const [mapState,setMapState]=useState(null);\r\n  const [runPath, setRunPath] = useState([]);\r\n  const [mapRegion, setMapRegion] = useState(null);\r\n  const [runDate, setRunDate] = useState(null);\r\n  const [runDay, setRunDay] = useState(null);\r\n  const [runDistance, setRunDistance] = useState(0);\r\n  const [runTotalTime, setRunTotalTime] = useState(0);\r\n  const [runCaloriesBurnt, setRunCaloriesBurnt] = useState(0);\r\n  const [runPace, setRunPace] = useState(0.00);\r\n  const [userRank, setUserRank] = useState(0);\r\n  const [isEvent, setIsEvent] = useState(false);\r\n  const [trackTimer, setTrackTimer] = useState({\r\n    seconds: \"00\",\r\n    minutes: \"00\",\r\n    hours: \"00\"\r\n  });\r\n\r\n  //Load Screen Use Effect hook used to populate state variables\r\n  useEffect(() => {\r\n    runDetails = props.route.params.runDetails;\r\n    if (props.route.params.sourceScreen) {\r\n      if (props.route.params.sourceScreen === 'RunHistoryScreen') {\r\n        isCalledFromHistoryScreen = true;\r\n      }\r\n    }\r\n\r\n    if (parseInt(runDetails.eventId) > 0) {\r\n      var eventResult = eventResultDetails.find(eventResult => eventResult.runId === runDetails.runId);\r\n      setUserRank(eventResult !== undefined ? eventResult.userRank : 0);\r\n      setIsEvent(true);\r\n    }\r\n\r\n    if (runDetails.runDistance) {\r\n      const pathArray = runDetails.runPath;\r\n      //To handle No Location Available Scenario\r\n      if (pathArray.length > 0) {\r\n        setRunPath(pathArray);\r\n        setMapRegion({\r\n          latitude: pathArray[Math.floor(pathArray.length / 2)].latitude,\r\n          longitude: pathArray[Math.floor(pathArray.length / 2)].longitude,\r\n          latitudeDelta: Math.abs(pathArray[pathArray.length - 1].latitude - pathArray[0].latitude) + 0.005,\r\n          longitudeDelta: Math.abs(pathArray[pathArray.length - 1].longitude - pathArray[0].longitude) + 0.005\r\n        });\r\n      }\r\n\r\n      setRunDate(runDetails.runDate);\r\n      setRunDay(runDetails.runDay);\r\n      setRunDistance(runDetails.runDistance);\r\n      setRunPace(runDetails.runPace);\r\n      setRunCaloriesBurnt(runDetails.runCaloriesBurnt);\r\n\r\n      runStartDateTime = runDetails.runStartDateTime;\r\n      runId = runDetails.runId;\r\n      eventId = runDetails.eventId;\r\n      var runTotalTimeVar = runDetails.runTotalTime;\r\n      let secondsVar = (\"0\" + (Math.floor(runTotalTimeVar / 1000) % 60)).slice(-2);\r\n      let minutesVar = (\"0\" + (Math.floor(runTotalTimeVar / 60000) % 60)).slice(-2);\r\n      let hoursVar = (\"0\" + Math.floor(runTotalTimeVar / 3600000)).slice(-2);\r\n      setTrackTimer({\r\n        seconds: secondsVar,\r\n        minutes: minutesVar,\r\n        hours: hoursVar\r\n      });\r\n      setRunTotalTime(runTotalTimeVar);\r\n    }\r\n    saveRun();\r\n  }, [props.route.params]);\r\n\r\n  //Method to save Run In Local DB and Server\r\n  const saveRun = () => {\r\n    if ((!isCalledFromHistoryScreen)) {\r\n      dispatch(runActions.addRun(runDetails)).then((response) => {\r\n        if (runDetails.eventId > 0) {\r\n          if (response.status === StatusCodes.NO_INTERNET) {\r\n            Alert.alert(\"Internet Issue\", \"Your Event Run is not yet submitted due to connectivity issue, please check the internet connection and reload the application to submit this run!!!\");\r\n          } else if (response.status === StatusCodes.DISTANCE_NOT_ELIGIBLE) {\r\n            Alert.alert(\"Run Not Eligible\", \"Your Event Run is not eligible for submission, we have saved it as a normal run!!!\");\r\n          } else if (response.status >= StatusCodes.BAD_REQUEST) {\r\n            Alert.alert(\"Technical Issue\", \"Your Event Run is not yet submitted due to technical issue, please reload the application to submit this run!!!\");\r\n          } else {\r\n            Alert.alert(\"Success\", \"Your Event Run has been submitted successfully!!!\");\r\n          }\r\n        } else if (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n          Alert.alert(\"Run Not Saved\", \"Sorry, we could not save this Run!!!\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n//View\r\nreturn (\r\n <View style={styles.runDetailsContainerStyle}>\r\n  {runPath&&runPath.length>0?(\r\n  <MapView style={styles.mapContainerStyle} region={mapRegion}\r\n   pitchEnabled={true} rotateEnabled={true} zoomEnabled={true} scrollEnabled={true}>\r\n   <Polyline \r\n   strokeWidth={5}\r\n   strokeColor='red'\r\n   coordinates={runPath}/>\r\n   {runPath[0]!==undefined?(\r\n   <Marker pinColor='green' coordinate={runPath[0]}/>):(<View></View>)}\r\n   {runPath[runPath.length-1]!==undefined?(\r\n   <Marker pinColor='red' coordinate={runPath[runPath.length-1]}/>):(<View></View>)}\r\n  </MapView>):\r\n   <View style={styles.mapContainerStyle}>\r\n    <ImageBackground \r\n      source={require('../assets/images/no_location.jpg')} \r\n      style={styles.bgImage}>\r\n     </ImageBackground>\r\n   </View>}\r\n\r\n <View style={styles.scrollViewContainerStyle}>\r\n  <ScrollView style={styles.runMetricsContainerStyle}>\r\n   {isEvent&&userRank>0?(\r\n\r\n   <View style={styles.rowStyle}>\r\n    <Card style={{width:'97%'}}>\r\n      <Ionicons name={Platform.OS === 'android'?\"md-trophy\":\"ios-trophy\"} size={25} color='springgreen'/>\r\n      <Text style={styles.largeTextStyle}>{userRank}</Text>\r\n      <Text style={styles.mediumTextStyle}>Rank</Text>\r\n    </Card>\r\n   </View>):(<View></View>)}\r\n\r\n   <View style={styles.rowStyle}>\r\n    <Card style={{width:'60%'}}>\r\n     <Ionicons name={Platform.OS === 'android'?\"md-walk\":\"ios-walk\"} size={30} color='springgreen'/>\r\n     <Text style={styles.largeTextStyle}>{parseFloat(runDistance/1000).toFixed(2)} KM</Text>\r\n    </Card>\r\n\r\n    <Card style={{width:'35%'}}>\r\n     <Ionicons name={Platform.OS === 'android'?\"md-stopwatch\":\"ios-stopwatch\"} size={20} color='springgreen'/>\r\n     <Text style={styles.mediumTextStyle}>{trackTimer.hours}:{trackTimer.minutes}:{trackTimer.seconds}</Text>\r\n     <Text style={styles.smallTextStyle}>HH:MM:SS</Text>\r\n    </Card>\r\n   </View>\r\n\r\n   <View style={styles.rowStyle}>\r\n    <Card style={{width:'35%'}}>\r\n      <Ionicons name={Platform.OS === 'android'?\"md-calendar\":\"ios-calendar\"} size={25} color='springgreen'/>\r\n      <Text style={styles.mediumTextStyle}>{runDate}</Text>\r\n      <Text style={styles.mediumTextStyle}>{runDay}</Text>\r\n    </Card>\r\n\r\n    <Card style={{width:'25%'}}>\r\n      <Ionicons name={Platform.OS === 'android'?\"md-flame\":\"ios-flame\"} size={25} color='springgreen'/>\r\n      <Text style={styles.mediumTextStyle}>{parseFloat(runCaloriesBurnt).toFixed(2)}</Text>\r\n      <Text style={styles.mediumTextStyle}>Calories</Text>\r\n    </Card>\r\n\r\n    <Card style={{width:'33%'}}>\r\n      <Ionicons name={Platform.OS === 'android'?\"md-speedometer\":\"ios-speedometer\"} size={25} color='springgreen'/>\r\n      <Text style={styles.mediumTextStyle}>{parseFloat(runPace).toFixed(2)}</Text>\r\n      <Text style={styles.mediumTextStyle}>Pace</Text>\r\n    </Card>\r\n\r\n   </View>\r\n  </ScrollView>\r\n </View>\r\n </View>\r\n);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  runDetailsContainerStyle: {\r\n    flex: 1,\r\n    backgroundColor: 'lightgrey',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  mapContainerStyle: {\r\n    flex: 0.4,\r\n    borderRadius: 20\r\n  },\r\n  scrollViewContainerStyle: {\r\n    flex: 0.6\r\n  },\r\n  runMetricsContainerStyle: {\r\n    flexDirection: 'column',\r\n    alignSelf: 'center'\r\n  },\r\n  bgImage: {\r\n   flex: 1\r\n  },\r\n\r\n  rowStyle: {\r\n    flex: 1,\r\n    height: '30%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  largeTextStyle: {\r\n    fontSize: moderateScale(40, 0.8),\r\n    color: 'springgreen'\r\n  },\r\n  mediumTextStyle: {\r\n    fontSize: moderateScale(17, 0.8),\r\n    color: 'springgreen'\r\n  },\r\n  smallTextStyle: {\r\n    padding: '3%',\r\n    fontSize: moderateScale(10, 0.8),\r\n    color: 'springgreen'\r\n  }\r\n\r\n});\r\n\r\nexport default RunDetailsScreen;"]},"metadata":{},"sourceType":"module"}