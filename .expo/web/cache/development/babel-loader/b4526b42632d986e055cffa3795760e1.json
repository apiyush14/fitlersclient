{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\screens\\\\LogInScreen.js\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { scale, moderateScale, verticalScale } from \"../utils/Utils\";\nimport StatusCodes from \"../utils/StatusCodes.json\";\nimport RoundButton from \"../components/RoundButton\";\nimport TextInputItem from \"../components/TextInputItem\";\nimport * as authActions from \"../store/auth-actions\";\nimport * as userActions from \"../store/user-actions\";\nimport { useDispatch } from 'react-redux';\nimport TermsAndConditions from \"../screens/TermsAndConditions\";\nimport Privacy from \"../screens/Privacy\";\n\nvar LogInScreen = function LogInScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      MSISDN = _useState2[0],\n      setMSISDN = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isValidMSISDN = _useState4[0],\n      setIsValidMSISDN = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      otpCode = _useState6[0],\n      setOtpCode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalForScreenVisible = _useState10[0],\n      setModalForScreenVisible = _useState10[1];\n\n  var _useState11 = useState(30),\n      _useState12 = _slicedToArray(_useState11, 2),\n      retryOtpTimer = _useState12[0],\n      setRetryOtpTimer = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      retryTimerId = _useState14[0],\n      setRetryTimerId = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      screenName = _useState16[0],\n      setScreenName = _useState16[1];\n\n  var timerRef = useRef(null);\n\n  var onClickGetOTP = function onClickGetOTP() {\n    dispatch(authActions.generateOTPForMSISDN(MSISDN)).then(function (response) {\n      if (response.status === StatusCodes.NO_INTERNET) {\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {}\n        }], {\n          cancelable: false\n        });\n      } else if (response.status !== StatusCodes.OK) {\n        Alert.alert(\"Try Again\", \"Please try again later!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {}\n        }], {\n          cancelable: false\n        });\n      } else {\n        setModalVisible(true);\n        var intervalId = setInterval(function () {\n          return updateRetryTimer();\n        }, 1000);\n        setRetryTimerId(intervalId);\n        timerRef.current = setTimeout(function () {\n          setModalVisible(false);\n          setOtpCode(\"\");\n          setRetryOtpTimer(30);\n          clearInterval(retryTimerId);\n        }, 30000);\n      }\n    });\n  };\n\n  var updateRetryTimer = function updateRetryTimer() {\n    setRetryOtpTimer(function (prevState) {\n      return prevState - 1;\n    });\n  };\n\n  var onClickSubmitOTP = function onClickSubmitOTP() {\n    dispatch(authActions.validateOTPForMSISDN(MSISDN, otpCode)).then(function (response) {\n      if (response.status === StatusCodes.NO_INTERNET) {\n        setOtpCode(\"\");\n        dispatch(cleanUserData());\n        clearInterval(retryTimerId);\n        clearTimeout(timerRef.current);\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n            setRetryOtpTimer(30);\n          }\n        }], {\n          cancelable: false\n        });\n      } else if (response.status !== StatusCodes.OK) {\n        setOtpCode(\"\");\n        dispatch(cleanUserData());\n        clearInterval(retryTimerId);\n        clearTimeout(timerRef.current);\n        Alert.alert(\"OTP Alert\", \"OTP Validation Failed please try again!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n            setRetryOtpTimer(30);\n          }\n        }], {\n          cancelable: false\n        });\n      } else if (response.data.isValid) {\n        clearInterval(retryTimerId);\n        clearTimeout(timerRef.current);\n        setModalVisible(false);\n        loadUserDetailsAndNavigate();\n      } else {\n        setOtpCode(\"\");\n        clearInterval(retryTimerId);\n        clearTimeout(timerRef.current);\n        Alert.alert(\"OTP Alert\", \"Incorrect OTP please try again!!!\", [{\n          text: 'OK',\n          onPress: function onPress() {\n            setModalVisible(false);\n            setRetryOtpTimer(30);\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    });\n  };\n\n  var onModalClosed = function onModalClosed() {\n    clearInterval(retryTimerId);\n    setOtpCode(\"\");\n    setRetryOtpTimer(30);\n  };\n\n  var onClickTextItem = function onClickTextItem(selectedItem) {\n    setScreenName(selectedItem);\n    setModalForScreenVisible(true);\n  };\n\n  var onCloseScreenTextItem = function onCloseScreenTextItem() {\n    setScreenName(\"\");\n    setModalForScreenVisible(false);\n  };\n\n  var loadUserDetailsAndNavigate = function loadUserDetailsAndNavigate() {\n    dispatch(userActions.loadUserDetails()).then(function (userDetails) {\n      userDetails.status !== StatusCodes.OK || userDetails.data.userFirstName === null ? props.navigation.navigate('UserDetailsScreen') : props.navigation.navigate('Home');\n    });\n  };\n\n  var onChangeMSISDNHandler = function onChangeMSISDNHandler(text) {\n    var phoneNumberRegex = /^\\d{10}$/;\n\n    if (text.match(phoneNumberRegex)) {\n      setIsValidMSISDN(true);\n      setMSISDN(text);\n    } else {\n      setIsValidMSISDN(false);\n    }\n  };\n\n  var cleanUserData = function cleanUserData() {\n    return function _callee(dispatch) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(dispatch({\n                type: 'CLEAN_USER_STATE'\n              }));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(dispatch({\n                type: 'CLEAN_AUTH_STATE'\n              }));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(dispatch(userActions.cleanUpUserData()));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  };\n\n  return React.createElement(View, {\n    style: styles.logInScreenContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 8\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/images/login.jpg\"),\n    style: styles.bgImageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInputItem, {\n    style: styles.msisdnInputStyle,\n    textContentType: \"telephoneNumber\",\n    keyboardType: \"phone-pad\",\n    placeholder: \" Enter Your Mobile Number\",\n    textAlign: \"center\",\n    textContentType: \"telephoneNumber\",\n    maxLength: 10,\n    onChangeText: onChangeMSISDNHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), !isValidMSISDN && MSISDN.length > 0 ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \" Please enter valid phone number \") : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 12\n    }\n  }), React.createElement(RoundButton, {\n    style: styles.otpButtonStyle,\n    title: \"Get OTP\",\n    disabled: !isValidMSISDN || MSISDN.length === 0,\n    onPress: onClickGetOTP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.footerContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 10\n    }\n  }, \"            By signing in, you agree to our\", \"\\n\", React.createElement(Text, {\n    style: styles.hyperLinkTextStyle,\n    onPress: function onPress() {\n      onClickTextItem(\"terms\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 10\n    }\n  }, \" Terms & Conditions \"), \"and\", React.createElement(Text, {\n    style: styles.hyperLinkTextStyle,\n    onPress: function onPress() {\n      onClickTextItem(\"privacy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 10\n    }\n  }, \" Privacy Policy\"))))), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: false,\n    visible: modalForScreenVisible,\n    onDismiss: onModalClosed,\n    onRequestClose: function onRequestClose() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, screenName === \"terms\" ? React.createElement(TermsAndConditions, {\n    onClose: onCloseScreenTextItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 10\n    }\n  }) : React.createElement(Privacy, {\n    onClose: onCloseScreenTextItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  })), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: false,\n    visible: modalVisible,\n    onDismiss: onModalClosed,\n    onRequestClose: function onRequestClose() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/images/login.jpg\"),\n    style: styles.bgImageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 8\n    }\n  }, React.createElement(View, {\n    style: styles.otpModalContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInputItem, {\n    style: styles.otpInputStyle,\n    keyboardType: \"number-pad\",\n    placeholder: \"Enter OTP\",\n    textAlign: \"center\",\n    textContentType: \"oneTimeCode\",\n    maxLength: 4,\n    onChangeText: function onChangeText(text) {\n      return setOtpCode(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 10\n    }\n  }), React.createElement(Text, {\n    style: styles.retryOtpTimerTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 10\n    }\n  }, \"Resend OTP in \", retryOtpTimer, \" seconds \"), React.createElement(RoundButton, {\n    style: styles.buttonSubmitOtpStyle,\n    title: \"Submit\",\n    disabled: otpCode.length === 0,\n    onPress: onClickSubmitOTP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 10\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  logInScreenContainerStyle: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  bgImageStyle: {\n    flex: 1\n  },\n  msisdnInputStyle: {\n    top: '40%'\n  },\n  errorTextStyle: {\n    color: 'red',\n    top: '42%',\n    alignSelf: 'center'\n  },\n  otpButtonStyle: {\n    alignSelf: 'center',\n    top: '45%'\n  },\n  footerContainerStyle: {\n    alignSelf: 'center',\n    borderRadius: 25,\n    top: '50%',\n    backgroundColor: 'black',\n    opacity: 0.5\n  },\n  footerTextStyle: {\n    fontSize: moderateScale(13, 0.8),\n    color: 'white',\n    padding: '2%'\n  },\n  hyperLinkTextStyle: {\n    fontSize: moderateScale(14, 0.8),\n    color: 'white',\n    fontWeight: 'bold',\n    textDecorationLine: 'underline'\n  },\n  otpModalContainerStyle: {\n    marginTop: '10%'\n  },\n  otpInputStyle: {\n    width: verticalScale(120),\n    top: '90%'\n  },\n  retryOtpTimerTextStyle: {\n    color: 'red',\n    top: '35%',\n    alignSelf: 'center'\n  },\n  buttonSubmitOtpStyle: {\n    alignSelf: 'center',\n    top: '95%'\n  }\n});\nexport default LogInScreen;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/screens/LogInScreen.js"],"names":["React","useState","useRef","scale","moderateScale","verticalScale","StatusCodes","RoundButton","TextInputItem","authActions","userActions","useDispatch","TermsAndConditions","Privacy","LogInScreen","props","dispatch","MSISDN","setMSISDN","isValidMSISDN","setIsValidMSISDN","otpCode","setOtpCode","modalVisible","setModalVisible","modalForScreenVisible","setModalForScreenVisible","retryOtpTimer","setRetryOtpTimer","retryTimerId","setRetryTimerId","screenName","setScreenName","timerRef","onClickGetOTP","generateOTPForMSISDN","then","response","status","NO_INTERNET","Alert","alert","text","onPress","cancelable","OK","intervalId","setInterval","updateRetryTimer","current","setTimeout","clearInterval","prevState","onClickSubmitOTP","validateOTPForMSISDN","cleanUserData","clearTimeout","data","isValid","loadUserDetailsAndNavigate","onModalClosed","onClickTextItem","selectedItem","onCloseScreenTextItem","loadUserDetails","userDetails","userFirstName","navigation","navigate","onChangeMSISDNHandler","phoneNumberRegex","match","type","cleanUpUserData","styles","logInScreenContainerStyle","Keyboard","dismiss","require","bgImageStyle","msisdnInputStyle","length","errorTextStyle","otpButtonStyle","footerContainerStyle","footerTextStyle","hyperLinkTextStyle","otpModalContainerStyle","otpInputStyle","retryOtpTimerTextStyle","buttonSubmitOtpStyle","StyleSheet","create","flex","flexDirection","top","color","alignSelf","borderRadius","backgroundColor","opacity","fontSize","padding","fontWeight","textDecorationLine","marginTop","width"],"mappings":"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","sourcesContent":["  import React, {useState, useRef} from 'react';\r\n  import {View,Text,Alert,StyleSheet,Modal,TouchableWithoutFeedback,Keyboard,ImageBackground,TouchableOpacity} from 'react-native';\r\n  import { scale, moderateScale, verticalScale} from '../utils/Utils';\r\n  import StatusCodes from \"../utils/StatusCodes.json\";\r\n  import RoundButton from '../components/RoundButton';\r\n  import TextInputItem from '../components/TextInputItem';\r\n  import * as authActions from '../store/auth-actions';\r\n  import * as userActions from '../store/user-actions';\r\n  import {useDispatch} from 'react-redux';\r\n  import TermsAndConditions from '../screens/TermsAndConditions';\r\n  import Privacy from '../screens/Privacy';\r\n\r\n  //Login Screen\r\n  const LogInScreen = props => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //State Variables\r\n  const [MSISDN, setMSISDN] = useState(\"\");\r\n  const [isValidMSISDN, setIsValidMSISDN] = useState(true);\r\n  const [otpCode, setOtpCode] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalForScreenVisible, setModalForScreenVisible] = useState(false);\r\n  const [retryOtpTimer, setRetryOtpTimer] = useState(30);\r\n  const [retryTimerId, setRetryTimerId] = useState(null);\r\n  const [screenName, setScreenName] = useState(\"\");\r\n\r\n  const timerRef=useRef(null);\r\n\r\n  //Get OTP event handler\r\n  const onClickGetOTP = () => {\r\n    dispatch(authActions.generateOTPForMSISDN(MSISDN)).then(response => {\r\n      if (response.status === StatusCodes.NO_INTERNET) {\r\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {}\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else if (response.status !== StatusCodes.OK) {\r\n        Alert.alert(\"Try Again\", \"Please try again later!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {}\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else {\r\n        setModalVisible(true);\r\n        //Update Retry Timer each second to display on screen, once timer is started\r\n        var intervalId = setInterval(() => updateRetryTimer(), 1000);\r\n        setRetryTimerId(intervalId);\r\n        timerRef.current=setTimeout(() => {\r\n          setModalVisible(false);\r\n          setOtpCode(\"\");\r\n          setRetryOtpTimer(30);\r\n          clearInterval(retryTimerId);\r\n        }, 30000);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Update Retry Timer hook\r\n  const updateRetryTimer = () => {\r\n    setRetryOtpTimer((prevState) => {\r\n      return prevState - 1;\r\n    });\r\n  };\r\n\r\n  //Submit OTP event handler\r\n  const onClickSubmitOTP = () => {\r\n    dispatch(authActions.validateOTPForMSISDN(MSISDN, otpCode)).then((response) => {\r\n      if (response.status === StatusCodes.NO_INTERNET) {\r\n        setOtpCode(\"\");\r\n        dispatch(cleanUserData());\r\n        clearInterval(retryTimerId);\r\n        clearTimeout(timerRef.current);\r\n        Alert.alert(\"Internet Issue\", \"Active Internet Connection Required!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false);\r\n            setRetryOtpTimer(30);\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else if (response.status !== StatusCodes.OK) {\r\n        setOtpCode(\"\");\r\n        dispatch(cleanUserData());\r\n        clearInterval(retryTimerId);\r\n        clearTimeout(timerRef.current);\r\n        Alert.alert(\"OTP Alert\", \"OTP Validation Failed please try again!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false);\r\n            setRetryOtpTimer(30);\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      } else if (response.data.isValid) {\r\n        clearInterval(retryTimerId);\r\n        clearTimeout(timerRef.current);\r\n        setModalVisible(false);\r\n        loadUserDetailsAndNavigate();\r\n      } else {\r\n        setOtpCode(\"\");\r\n        clearInterval(retryTimerId);\r\n        clearTimeout(timerRef.current);\r\n        Alert.alert(\"OTP Alert\", \"Incorrect OTP please try again!!!\", [{\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setModalVisible(false);\r\n            setRetryOtpTimer(30);\r\n          }\r\n        }], {\r\n          cancelable: false\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //Modal Closed Event Handler\r\n  const onModalClosed = () => {\r\n    clearInterval(retryTimerId);\r\n    setOtpCode(\"\");\r\n    setRetryOtpTimer(30);\r\n  };\r\n\r\n  //Privacy & Terms & Conditions Item Handler\r\n  const onClickTextItem = (selectedItem) => {\r\n    setScreenName(selectedItem);\r\n    setModalForScreenVisible(true);\r\n  };\r\n\r\n  //Privacy & Terms & Conditions Item Close Action Handler\r\n  const onCloseScreenTextItem = () => {\r\n    setScreenName(\"\");\r\n    setModalForScreenVisible(false);\r\n  };\r\n\r\n  //Load User Details from local or server and navigate either to User Details screen or Home Screen\r\n  const loadUserDetailsAndNavigate = () => {\r\n    dispatch(userActions.loadUserDetails()).then((userDetails) => {\r\n      userDetails.status !== StatusCodes.OK || userDetails.data.userFirstName === null ? props.navigation.navigate('UserDetailsScreen') : props.navigation.navigate('Home');\r\n    });\r\n  };\r\n\r\n  //Method to validate Phone Number Input\r\n  const onChangeMSISDNHandler = (text) => {\r\n    var phoneNumberRegex = /^\\d{10}$/;\r\n    if (text.match(phoneNumberRegex)) {\r\n      setIsValidMSISDN(true);\r\n      setMSISDN(text);\r\n    } else {\r\n      setIsValidMSISDN(false);\r\n    }\r\n  };\r\n\r\n  //Method to clean User Data in case of failure while validating OTP\r\n  const cleanUserData = () => {\r\n    return async dispatch => {\r\n      await dispatch({\r\n        type: 'CLEAN_USER_STATE'\r\n      });\r\n      await dispatch({\r\n        type: 'CLEAN_AUTH_STATE'\r\n      });\r\n      await dispatch(userActions.cleanUpUserData());\r\n    };\r\n  };\r\n\r\n    return ( \r\n      <View style = {styles.logInScreenContainerStyle}>\r\n       <TouchableWithoutFeedback onPress = {Keyboard.dismiss} accessible = {false} >\r\n        <ImageBackground source = {require('../assets/images/login.jpg')} \r\n        style = {styles.bgImageStyle}>\r\n        <TextInputItem\r\n         style = {styles.msisdnInputStyle}\r\n         textContentType = \"telephoneNumber\"\r\n         keyboardType = \"phone-pad\"\r\n         placeholder = \" Enter Your Mobile Number\"\r\n         textAlign = \"center\"\r\n         textContentType = \"telephoneNumber\"\r\n         maxLength = {10}\r\n         onChangeText = {onChangeMSISDNHandler}>\r\n        </TextInputItem> \r\n         {!isValidMSISDN && MSISDN.length>0 ? ( \r\n          <Text style = {styles.errorTextStyle} > Please enter valid phone number < /Text>):\r\n          (<Text/>)\r\n         }\r\n\r\n        <RoundButton style = {styles.otpButtonStyle}\r\n         title = \"Get OTP\"\r\n         disabled = {(!isValidMSISDN || (MSISDN.length === 0))}\r\n         onPress = {onClickGetOTP}\r\n        /> \r\n        \r\n        <View style={styles.footerContainerStyle}>\r\n         <Text style={styles.footerTextStyle}>            By signing in, you agree to our{\"\\n\"} \r\n         <Text\r\n         style={styles.hyperLinkTextStyle}\r\n         onPress={()=>{onClickTextItem(\"terms\")}}> Terms & Conditions </Text>\r\n          and \r\n         <Text\r\n         style={styles.hyperLinkTextStyle} \r\n         onPress={()=>{onClickTextItem(\"privacy\")}}> Privacy Policy</Text>\r\n         </Text>\r\n        </View>\r\n\r\n       </ImageBackground> \r\n      </TouchableWithoutFeedback>\r\n\r\n      <Modal animationType = \"slide\"\r\n       transparent = {false}\r\n       visible = {modalForScreenVisible}\r\n       onDismiss = {onModalClosed}\r\n       onRequestClose = {() => {}\r\n      }>\r\n        {screenName===\"terms\"?(\r\n         <TermsAndConditions onClose={onCloseScreenTextItem}></TermsAndConditions>\r\n        ):\r\n         (<Privacy onClose={onCloseScreenTextItem}></Privacy>)\r\n        }\r\n      </Modal>\r\n\r\n      <Modal animationType = \"slide\"\r\n       transparent = {false}\r\n       visible = {modalVisible}\r\n       onDismiss = {onModalClosed}\r\n       onRequestClose = {() => {}\r\n      }>\r\n\r\n      <TouchableWithoutFeedback onPress = {Keyboard.dismiss}\r\n       accessible = {false}>\r\n       <ImageBackground source = {require('../assets/images/login.jpg')}\r\n        style = {styles.bgImageStyle}>\r\n        <View style = {styles.otpModalContainerStyle}>\r\n         <TextInputItem style = {styles.otpInputStyle}\r\n          keyboardType = \"number-pad\"\r\n          placeholder = \"Enter OTP\"\r\n          textAlign = \"center\"\r\n          textContentType = \"oneTimeCode\"\r\n          maxLength = {4}\r\n          onChangeText = {(text) => setOtpCode(text)} >\r\n         </TextInputItem> \r\n         <Text style = {styles.retryOtpTimerTextStyle}>Resend OTP in {retryOtpTimer} seconds < /Text> \r\n         <RoundButton style = {styles.buttonSubmitOtpStyle}\r\n          title = \"Submit\"\r\n          disabled = {otpCode.length === 0}\r\n          onPress = {onClickSubmitOTP}/> \r\n        </View> \r\n       </ImageBackground> \r\n      </TouchableWithoutFeedback> \r\n      </Modal> \r\n      </View>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    logInScreenContainerStyle: {\r\n      flex: 1,\r\n      flexDirection: 'column'\r\n    },\r\n    bgImageStyle: {\r\n      flex: 1\r\n    },\r\n\r\n    msisdnInputStyle: {\r\n      top: '40%'\r\n    },\r\n    errorTextStyle: {\r\n      color: 'red',\r\n      top: '42%',\r\n      alignSelf: 'center',\r\n    },\r\n    otpButtonStyle: {\r\n      alignSelf: 'center',\r\n      top: '45%'\r\n    },\r\n    footerContainerStyle: {\r\n      alignSelf: 'center',\r\n      borderRadius: 25,\r\n      top: '50%',\r\n      backgroundColor: 'black',\r\n      opacity: 0.5\r\n    },\r\n    footerTextStyle: {\r\n      fontSize: moderateScale(13, 0.8),\r\n      color: 'white',\r\n      padding: '2%'\r\n    },\r\n    hyperLinkTextStyle: {\r\n      fontSize: moderateScale(14, 0.8),\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      textDecorationLine: 'underline'\r\n    },\r\n\r\n    otpModalContainerStyle: {\r\n      marginTop: '10%'\r\n    },\r\n    otpInputStyle: {\r\n      width: verticalScale(120),\r\n      top: '90%'\r\n    },\r\n    retryOtpTimerTextStyle: {\r\n      color: 'red',\r\n      top: '35%',\r\n      alignSelf: 'center'\r\n    },\r\n    buttonSubmitOtpStyle: {\r\n      alignSelf: 'center',\r\n      top: '95%'\r\n    }\r\n  });\r\n\r\n  export default LogInScreen;"]},"metadata":{},"sourceType":"module"}