{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactNative\\\\onehealthclient\\\\onehealthclient\\\\components\\\\EventView.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RoundButton from \"../components/RoundButton\";\nimport configData from \"../config/config.json\";\nimport { scale, moderateScale, verticalScale } from \"../utils/Utils\";\nimport { useSelector } from 'react-redux';\n\nvar EventView = function EventView(props) {\n  var eventRegistrationDetails = useSelector(function (state) {\n    return state.events.eventRegistrationDetails;\n  });\n  var weekday = new Array(7);\n  weekday[0] = \"Sunday\";\n  weekday[1] = \"Monday\";\n  weekday[2] = \"Tuesday\";\n  weekday[3] = \"Wednesday\";\n  weekday[4] = \"Thursday\";\n  weekday[5] = \"Friday\";\n  weekday[6] = \"Saturday\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventStartDay = _useState2[0],\n      setEventStartDay = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventStartDate = _useState4[0],\n      setEventStartDate = _useState4[1];\n\n  var _useState5 = useState(new Date()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      eventEndDate = _useState6[0],\n      setEventEndDate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isRegistered = _useState8[0],\n      setIsRegistered = _useState8[1];\n\n  useEffect(function () {\n    var eventStartDate = new Date(props.eventDetails.eventStartDate);\n    var eventEndDate = new Date(props.eventDetails.eventEndDate);\n    setEventStartDate(eventStartDate);\n    setEventEndDate(eventEndDate);\n    setIsRegistered(eventRegistrationDetails.findIndex(function (event) {\n      return event.eventId === props.eventDetails.eventId;\n    }) >= 0);\n  }, []);\n  return React.createElement(View, {\n    style: styles.eventViewContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: configData.SERVER_URL + \"event-details/getDisplayImage/\" + props.eventDetails.eventId + \"?imageType=DISPLAY\"\n    },\n    style: styles.imageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.actionPanelContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollViewContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.eventHeaderTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, props.eventDetails.eventName), React.createElement(View, {\n    style: styles.eventCalendarContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.eventDateContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, React.createElement(View, {\n    style: styles.eventDateDigitViewStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.eventDateTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }\n  }, (\"0\" + parseInt(eventStartDate.getDate())).slice(-2))), React.createElement(View, {\n    style: styles.eventDateDigitViewStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.eventDateTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }\n  }, (\"0\" + parseInt(eventStartDate.getMonth() + 1)).slice(-2))), React.createElement(View, {\n    style: styles.eventDateDigitViewStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.eventDateTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }\n  }, (\"0\" + parseInt(eventStartDate.getFullYear() % 100)).slice(-2)))), React.createElement(View, {\n    style: styles.eventDateContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.eventDateFormatTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, \"DD\"), React.createElement(Text, {\n    style: styles.eventDateFormatTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }\n  }, \"MM\"), React.createElement(Text, {\n    style: styles.eventDateFormatTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }\n  }, \"YY\")), React.createElement(View, {\n    style: styles.eventDayContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.eventDayTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }\n  }, weekday[eventStartDate.getDay()])), React.createElement(View, {\n    style: styles.eventTimeContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.eventTimeTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }\n  }, (\"0\" + parseInt(eventStartDate.getHours())).slice(-2), \":\", (\"0\" + parseInt(eventStartDate.getMinutes())).slice(-2), \" - \", (\"0\" + parseInt(eventEndDate.getHours())).slice(-2), \":\", (\"0\" + parseInt(eventEndDate.getMinutes())).slice(-2))))), React.createElement(View, {\n    style: styles.buttonContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, !isRegistered ? React.createElement(RoundButton, {\n    title: \"Register\",\n    style: styles.buttonStyle,\n    onPress: props.onRegisterEventItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(RoundButton, {\n    title: \"Close\",\n    style: styles.buttonStyle,\n    onPress: props.onCloseEventItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  eventViewContainerStyle: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imageContainerStyle: {\n    flex: 1,\n    width: '100%'\n  },\n  imageStyle: {\n    width: '100%',\n    height: '100%'\n  },\n  actionPanelContainerStyle: {\n    flex: 0.4,\n    top: '60%',\n    backgroundColor: 'white',\n    borderRadius: 25,\n    opacity: 0.7,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  scrollViewContainerStyle: {\n    flex: 1,\n    marginTop: '5%'\n  },\n  eventCalendarContainerStyle: {\n    marginVertical: '5%',\n    alignItems: 'center'\n  },\n  eventDateContainerStyle: {\n    flexDirection: 'row',\n    flex: 1,\n    alignItems: 'center'\n  },\n  eventDateDigitViewStyle: {\n    marginHorizontal: '1%',\n    backgroundColor: 'black',\n    alignSelf: 'center',\n    borderRadius: 8\n  },\n  eventDateTextStyle: {\n    fontSize: moderateScale(22, 1),\n    color: 'white'\n  },\n  eventDateFormatTextStyle: {\n    fontSize: moderateScale(16, 0.5),\n    marginHorizontal: '2%'\n  },\n  eventDayContainerStyle: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  eventDayTextStyle: {\n    fontSize: moderateScale(16, 0.5)\n  },\n  eventTimeContainerStyle: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  eventTimeTextStyle: {\n    fontSize: moderateScale(16, 0.5)\n  },\n  eventHeaderTextStyle: {\n    fontSize: moderateScale(20, 0.5),\n    alignSelf: 'center'\n  },\n  buttonContainerStyle: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonStyle: {\n    flex: 1,\n    marginHorizontal: '2%',\n    borderRadius: 25,\n    height: '50%',\n    bottom: '2%'\n  }\n});\nexport default EventView;","map":{"version":3,"sources":["F:/ReactNative/onehealthclient/onehealthclient/components/EventView.js"],"names":["React","useState","useEffect","RoundButton","configData","scale","moderateScale","verticalScale","useSelector","EventView","props","eventRegistrationDetails","state","events","weekday","Array","eventStartDay","setEventStartDay","Date","eventStartDate","setEventStartDate","eventEndDate","setEventEndDate","isRegistered","setIsRegistered","eventDetails","findIndex","event","eventId","styles","eventViewContainerStyle","imageContainerStyle","uri","SERVER_URL","imageStyle","actionPanelContainerStyle","scrollViewContainerStyle","eventHeaderTextStyle","eventName","eventCalendarContainerStyle","eventDateContainerStyle","eventDateDigitViewStyle","eventDateTextStyle","parseInt","getDate","slice","getMonth","getFullYear","eventDateFormatTextStyle","eventDayContainerStyle","eventDayTextStyle","getDay","eventTimeContainerStyle","eventTimeTextStyle","getHours","getMinutes","buttonContainerStyle","buttonStyle","onRegisterEventItem","onCloseEventItem","StyleSheet","create","flex","justifyContent","alignItems","width","height","top","backgroundColor","borderRadius","opacity","flexDirection","marginTop","marginVertical","marginHorizontal","alignSelf","fontSize","color","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { StyleSheet,Text, View, TouchableOpacity,ImageBackground, ScrollView} from 'react-native';\r\nimport RoundButton from '../components/RoundButton';\r\nimport configData from \"../config/config.json\";\r\nimport { scale, moderateScale, verticalScale} from '../utils/Utils';\r\nimport {useSelector} from 'react-redux';\r\n\r\n/*\r\nEvent View, Best Resolution found using 1080*1920 image\r\n*/\r\n\r\nconst EventView=props=>{\r\n\r\n  // State Selectors\r\n  const eventRegistrationDetails = useSelector(state => state.events.eventRegistrationDetails);\r\n\r\n  var weekday = new Array(7);\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  //State Variables\r\n  const [eventStartDay, setEventStartDay] = useState(\"\");\r\n  const [eventStartDate, setEventStartDate] = useState(new Date());\r\n  const [eventEndDate, setEventEndDate] = useState(new Date());\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  //Use Effect Load Time Hook\r\n  useEffect(() => {\r\n    var eventStartDate = new Date(props.eventDetails.eventStartDate);\r\n    var eventEndDate = new Date(props.eventDetails.eventEndDate);\r\n    setEventStartDate(eventStartDate);\r\n    setEventEndDate(eventEndDate);\r\n    setIsRegistered(eventRegistrationDetails.findIndex((event)=>event.eventId===props.eventDetails.eventId)>=0);\r\n  }, []);\r\n\r\n//View\r\nreturn(\r\n \t <View style={styles.eventViewContainerStyle}>\r\n     <View style={styles.imageContainerStyle}>\r\n     <ImageBackground\r\n      source={{uri:configData.SERVER_URL+\"event-details/getDisplayImage/\"+props.eventDetails.eventId+\"?imageType=DISPLAY\"}} \r\n      style={styles.imageStyle}>\r\n\r\n      <View style={styles.actionPanelContainerStyle}>\r\n        <ScrollView style={styles.scrollViewContainerStyle}>\r\n         <Text style={styles.eventHeaderTextStyle}>{props.eventDetails.eventName}</Text>\r\n\r\n          <View style={styles.eventCalendarContainerStyle}>\r\n           <View style={styles.eventDateContainerStyle}>\r\n            <View style={styles.eventDateDigitViewStyle}>\r\n             <Text style={styles.eventDateTextStyle}>{(\"0\"+parseInt(eventStartDate.getDate())).slice(-2)}</Text>\r\n            </View>\r\n            <View style={styles.eventDateDigitViewStyle}>\r\n             <Text style={styles.eventDateTextStyle}>{(\"0\"+parseInt(eventStartDate.getMonth()+1)).slice(-2)}</Text>\r\n            </View>\r\n            <View style={styles.eventDateDigitViewStyle}>\r\n             <Text style={styles.eventDateTextStyle}>{(\"0\"+parseInt(eventStartDate.getFullYear()%100)).slice(-2)}</Text>\r\n            </View>\r\n           </View>\r\n\r\n           <View style={styles.eventDateContainerStyle}>\r\n             <Text style={styles.eventDateFormatTextStyle}>DD</Text>\r\n             <Text style={styles.eventDateFormatTextStyle}>MM</Text>\r\n             <Text style={styles.eventDateFormatTextStyle}>YY</Text>\r\n           </View>\r\n          \r\n            <View style={styles.eventDayContainerStyle}>\r\n             <Text style={styles.eventDayTextStyle}>{weekday[eventStartDate.getDay()]}</Text>\r\n            </View>\r\n           \r\n           <View style={styles.eventTimeContainerStyle}>\r\n             <Text style={styles.eventTimeTextStyle}>{(\"0\"+parseInt(eventStartDate.getHours())).slice(-2)}:{(\"0\"+parseInt(eventStartDate.getMinutes())).slice(-2)} - {(\"0\"+parseInt(eventEndDate.getHours())).slice(-2)}:{(\"0\"+parseInt(eventEndDate.getMinutes())).slice(-2)}</Text>\r\n           </View>\r\n\r\n          </View>\r\n        </ScrollView>\r\n\r\n      <View style={styles.buttonContainerStyle}>\r\n      {!isRegistered?(\r\n       <RoundButton title=\"Register\" style={styles.buttonStyle} onPress={props.onRegisterEventItem}/>)\r\n      :(<View></View>)}\r\n       <RoundButton title=\"Close\" style={styles.buttonStyle} onPress={props.onCloseEventItem}/>\r\n      </View>\r\n\r\n      </View>\r\n     </ImageBackground>\r\n     </View>\r\n     </View>\r\n \t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  eventViewContainerStyle: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  imageContainerStyle: {\r\n    flex: 1,\r\n    width: '100%'\r\n  },\r\n  imageStyle: {\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n\r\n  actionPanelContainerStyle: {\r\n    flex: 0.4,\r\n    top: '60%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 25,\r\n    opacity: 0.7,\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  scrollViewContainerStyle: {\r\n    flex: 1,\r\n    marginTop: '5%'\r\n  },\r\n\r\n  eventCalendarContainerStyle: {\r\n    marginVertical: '5%',\r\n    alignItems: 'center'\r\n  },\r\n  eventDateContainerStyle: {\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    alignItems: 'center'\r\n  },\r\n  eventDateDigitViewStyle: {\r\n    marginHorizontal: '1%',\r\n    backgroundColor: 'black',\r\n    alignSelf: 'center',\r\n    borderRadius: 8\r\n  },\r\n  eventDateTextStyle: {\r\n    fontSize: moderateScale(22, 1),\r\n    color: 'white'\r\n  },\r\n\r\n  eventDateFormatTextStyle: {\r\n    fontSize: moderateScale(16, 0.5),\r\n    marginHorizontal: '2%'\r\n  },\r\n\r\n  eventDayContainerStyle: {\r\n    flex: 1,\r\n    alignItems: 'center'\r\n  },\r\n  eventDayTextStyle: {\r\n    fontSize: moderateScale(16, 0.5),\r\n  },\r\n\r\n  eventTimeContainerStyle: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  eventTimeTextStyle: {\r\n    fontSize: moderateScale(16, 0.5),\r\n  },\r\n\r\n  eventHeaderTextStyle: {\r\n    fontSize: moderateScale(20, 0.5),\r\n    alignSelf: 'center'\r\n  },\r\n\r\n  buttonContainerStyle: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  buttonStyle: {\r\n    flex: 1,\r\n    marginHorizontal: '2%',\r\n    borderRadius: 25,\r\n    height: '50%',\r\n    bottom: '2%'\r\n  }\r\n});\r\n\r\nexport default EventView;"]},"metadata":{},"sourceType":"module"}